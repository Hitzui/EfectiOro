'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5420
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Database
	
	<System.Data.Linq.Mapping.DatabaseAttribute(Name:="EfectiOro")>  _
	Partial Public Class Contexto
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAdelantos(instance As Adelantos)
    End Sub
    Partial Private Sub UpdateAdelantos(instance As Adelantos)
    End Sub
    Partial Private Sub DeleteAdelantos(instance As Adelantos)
    End Sub
    Partial Private Sub InsertAgencia(instance As Agencia)
    End Sub
    Partial Private Sub UpdateAgencia(instance As Agencia)
    End Sub
    Partial Private Sub DeleteAgencia(instance As Agencia)
    End Sub
    Partial Private Sub InsertCaja(instance As Caja)
    End Sub
    Partial Private Sub UpdateCaja(instance As Caja)
    End Sub
    Partial Private Sub DeleteCaja(instance As Caja)
    End Sub
    Partial Private Sub InsertCliente(instance As Cliente)
    End Sub
    Partial Private Sub UpdateCliente(instance As Cliente)
    End Sub
    Partial Private Sub DeleteCliente(instance As Cliente)
    End Sub
    Partial Private Sub InsertCompras(instance As Compras)
    End Sub
    Partial Private Sub UpdateCompras(instance As Compras)
    End Sub
    Partial Private Sub DeleteCompras(instance As Compras)
    End Sub
    Partial Private Sub InsertDescargues(instance As Descargues)
    End Sub
    Partial Private Sub UpdateDescargues(instance As Descargues)
    End Sub
    Partial Private Sub DeleteDescargues(instance As Descargues)
    End Sub
    Partial Private Sub InsertDet_compra(instance As Det_compra)
    End Sub
    Partial Private Sub UpdateDet_compra(instance As Det_compra)
    End Sub
    Partial Private Sub DeleteDet_compra(instance As Det_compra)
    End Sub
    Partial Private Sub InsertDetacaja(instance As Detacaja)
    End Sub
    Partial Private Sub UpdateDetacaja(instance As Detacaja)
    End Sub
    Partial Private Sub DeleteDetacaja(instance As Detacaja)
    End Sub
    Partial Private Sub InsertEstado(instance As Estado)
    End Sub
    Partial Private Sub UpdateEstado(instance As Estado)
    End Sub
    Partial Private Sub DeleteEstado(instance As Estado)
    End Sub
    Partial Private Sub InsertForma_pago(instance As Forma_pago)
    End Sub
    Partial Private Sub UpdateForma_pago(instance As Forma_pago)
    End Sub
    Partial Private Sub DeleteForma_pago(instance As Forma_pago)
    End Sub
    Partial Private Sub InsertIds(instance As Ids)
    End Sub
    Partial Private Sub UpdateIds(instance As Ids)
    End Sub
    Partial Private Sub DeleteIds(instance As Ids)
    End Sub
    Partial Private Sub InsertMcaja(instance As Mcaja)
    End Sub
    Partial Private Sub UpdateMcaja(instance As Mcaja)
    End Sub
    Partial Private Sub DeleteMcaja(instance As Mcaja)
    End Sub
    Partial Private Sub InsertMovcaja(instance As Movcaja)
    End Sub
    Partial Private Sub UpdateMovcaja(instance As Movcaja)
    End Sub
    Partial Private Sub DeleteMovcaja(instance As Movcaja)
    End Sub
    Partial Private Sub InsertPica(instance As Pica)
    End Sub
    Partial Private Sub UpdatePica(instance As Pica)
    End Sub
    Partial Private Sub DeletePica(instance As Pica)
    End Sub
    Partial Private Sub InsertPrecioKilate(instance As PrecioKilate)
    End Sub
    Partial Private Sub UpdatePrecioKilate(instance As PrecioKilate)
    End Sub
    Partial Private Sub DeletePrecioKilate(instance As PrecioKilate)
    End Sub
    Partial Private Sub InsertPrecios(instance As Precios)
    End Sub
    Partial Private Sub UpdatePrecios(instance As Precios)
    End Sub
    Partial Private Sub DeletePrecios(instance As Precios)
    End Sub
    Partial Private Sub InsertRubro(instance As Rubro)
    End Sub
    Partial Private Sub UpdateRubro(instance As Rubro)
    End Sub
    Partial Private Sub DeleteRubro(instance As Rubro)
    End Sub
    Partial Private Sub InsertTipoCambio(instance As TipoCambio)
    End Sub
    Partial Private Sub UpdateTipoCambio(instance As TipoCambio)
    End Sub
    Partial Private Sub DeleteTipoCambio(instance As TipoCambio)
    End Sub
    Partial Private Sub InsertTipoPreciosPagados(instance As TipoPreciosPagados)
    End Sub
    Partial Private Sub UpdateTipoPreciosPagados(instance As TipoPreciosPagados)
    End Sub
    Partial Private Sub DeleteTipoPreciosPagados(instance As TipoPreciosPagados)
    End Sub
    Partial Private Sub InsertUsuario(instance As Usuario)
    End Sub
    Partial Private Sub UpdateUsuario(instance As Usuario)
    End Sub
    Partial Private Sub DeleteUsuario(instance As Usuario)
    End Sub
    #End Region
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Adelantos() As System.Data.Linq.Table(Of Adelantos)
			Get
				Return Me.GetTable(Of Adelantos)
			End Get
		End Property
		
		Public ReadOnly Property Agencia() As System.Data.Linq.Table(Of Agencia)
			Get
				Return Me.GetTable(Of Agencia)
			End Get
		End Property
		
		Public ReadOnly Property Caja() As System.Data.Linq.Table(Of Caja)
			Get
				Return Me.GetTable(Of Caja)
			End Get
		End Property
		
		Public ReadOnly Property Cliente() As System.Data.Linq.Table(Of Cliente)
			Get
				Return Me.GetTable(Of Cliente)
			End Get
		End Property
		
		Public ReadOnly Property ClientePica() As System.Data.Linq.Table(Of ClientePica)
			Get
				Return Me.GetTable(Of ClientePica)
			End Get
		End Property
		
		Public ReadOnly Property Compras() As System.Data.Linq.Table(Of Compras)
			Get
				Return Me.GetTable(Of Compras)
			End Get
		End Property
		
		Public ReadOnly Property DescargueByCompra() As System.Data.Linq.Table(Of DescargueByCompra)
			Get
				Return Me.GetTable(Of DescargueByCompra)
			End Get
		End Property
		
		Public ReadOnly Property Descargues() As System.Data.Linq.Table(Of Descargues)
			Get
				Return Me.GetTable(Of Descargues)
			End Get
		End Property
		
		Public ReadOnly Property Det_compra() As System.Data.Linq.Table(Of Det_compra)
			Get
				Return Me.GetTable(Of Det_compra)
			End Get
		End Property
		
		Public ReadOnly Property Detacaja() As System.Data.Linq.Table(Of Detacaja)
			Get
				Return Me.GetTable(Of Detacaja)
			End Get
		End Property
		
		Public ReadOnly Property Estado() As System.Data.Linq.Table(Of Estado)
			Get
				Return Me.GetTable(Of Estado)
			End Get
		End Property
		
		Public ReadOnly Property Forma_pago() As System.Data.Linq.Table(Of Forma_pago)
			Get
				Return Me.GetTable(Of Forma_pago)
			End Get
		End Property
		
		Public ReadOnly Property Ids() As System.Data.Linq.Table(Of Ids)
			Get
				Return Me.GetTable(Of Ids)
			End Get
		End Property
		
		Public ReadOnly Property Mcaja() As System.Data.Linq.Table(Of Mcaja)
			Get
				Return Me.GetTable(Of Mcaja)
			End Get
		End Property
		
		Public ReadOnly Property Movcaja() As System.Data.Linq.Table(Of Movcaja)
			Get
				Return Me.GetTable(Of Movcaja)
			End Get
		End Property
		
		Public ReadOnly Property MovimientosCajaSelect() As System.Data.Linq.Table(Of MovimientosCajaSelect)
			Get
				Return Me.GetTable(Of MovimientosCajaSelect)
			End Get
		End Property
		
		Public ReadOnly Property Pagos_adelantados() As System.Data.Linq.Table(Of Pagos_adelantados)
			Get
				Return Me.GetTable(Of Pagos_adelantados)
			End Get
		End Property
		
		Public ReadOnly Property Pica() As System.Data.Linq.Table(Of Pica)
			Get
				Return Me.GetTable(Of Pica)
			End Get
		End Property
		
		Public ReadOnly Property PrecioKilate() As System.Data.Linq.Table(Of PrecioKilate)
			Get
				Return Me.GetTable(Of PrecioKilate)
			End Get
		End Property
		
		Public ReadOnly Property Precios() As System.Data.Linq.Table(Of Precios)
			Get
				Return Me.GetTable(Of Precios)
			End Get
		End Property
		
		Public ReadOnly Property ReporteCaja() As System.Data.Linq.Table(Of ReporteCaja)
			Get
				Return Me.GetTable(Of ReporteCaja)
			End Get
		End Property
		
		Public ReadOnly Property RptMovimientosCaja() As System.Data.Linq.Table(Of RptMovimientosCaja)
			Get
				Return Me.GetTable(Of RptMovimientosCaja)
			End Get
		End Property
		
		Public ReadOnly Property Rubro() As System.Data.Linq.Table(Of Rubro)
			Get
				Return Me.GetTable(Of Rubro)
			End Get
		End Property
		
		Public ReadOnly Property Rubros_caja() As System.Data.Linq.Table(Of Rubros_caja)
			Get
				Return Me.GetTable(Of Rubros_caja)
			End Get
		End Property
		
		Public ReadOnly Property TipoCambio() As System.Data.Linq.Table(Of TipoCambio)
			Get
				Return Me.GetTable(Of TipoCambio)
			End Get
		End Property
		
		Public ReadOnly Property TipoPreciosPagados() As System.Data.Linq.Table(Of TipoPreciosPagados)
			Get
				Return Me.GetTable(Of TipoPreciosPagados)
			End Get
		End Property
		
		Public ReadOnly Property TransaccionEfectivo() As System.Data.Linq.Table(Of TransaccionEfectivo)
			Get
				Return Me.GetTable(Of TransaccionEfectivo)
			End Get
		End Property
		
		Public ReadOnly Property Usuario() As System.Data.Linq.Table(Of Usuario)
			Get
				Return Me.GetTable(Of Usuario)
			End Get
		End Property
		
		Public ReadOnly Property Vdetacaja() As System.Data.Linq.Table(Of Vdetacaja)
			Get
				Return Me.GetTable(Of Vdetacaja)
			End Get
		End Property
		
		Public ReadOnly Property VVariacionesCliente() As System.Data.Linq.Table(Of VVariacionesCliente)
			Get
				Return Me.GetTable(Of VVariacionesCliente)
			End Get
		End Property
	End Class
	
	<Table(Name:="dbo.adelantos")>  _
	Partial Public Class Adelantos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Idsalida As String
		
		Private _Codcliente As String
		
		Private _Numcompra As String
		
		Private _Fecha As Date
		
		Private _Monto As System.Nullable(Of Decimal)
		
		Private _Saldo As Decimal
		
		Private _Efectivo As System.Nullable(Of Decimal)
		
		Private _Cheque As System.Nullable(Of Decimal)
		
		Private _Transferencia As System.Nullable(Of Decimal)
		
		Private _Codcaja As String
		
		Private _Usuario As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdsalidaChanging(value As String)
    End Sub
    Partial Private Sub OnIdsalidaChanged()
    End Sub
    Partial Private Sub OnCodclienteChanging(value As String)
    End Sub
    Partial Private Sub OnCodclienteChanged()
    End Sub
    Partial Private Sub OnNumcompraChanging(value As String)
    End Sub
    Partial Private Sub OnNumcompraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnMontoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMontoChanged()
    End Sub
    Partial Private Sub OnSaldoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSaldoChanged()
    End Sub
    Partial Private Sub OnEfectivoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEfectivoChanged()
    End Sub
    Partial Private Sub OnChequeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnChequeChanged()
    End Sub
    Partial Private Sub OnTransferenciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTransferenciaChanged()
    End Sub
    Partial Private Sub OnCodcajaChanging(value As String)
    End Sub
    Partial Private Sub OnCodcajaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="idsalida", Storage:="_Idsalida", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Idsalida() As String
			Get
				Return Me._Idsalida
			End Get
			Set
				If (String.Equals(Me._Idsalida, value) = false) Then
					Me.OnIdsalidaChanging(value)
					Me.SendPropertyChanging
					Me._Idsalida = value
					Me.SendPropertyChanged("Idsalida")
					Me.OnIdsalidaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me.OnCodclienteChanging(value)
					Me.SendPropertyChanging
					Me._Codcliente = value
					Me.SendPropertyChanged("Codcliente")
					Me.OnCodclienteChanged
				End If
			End Set
		End Property
		
		<Column(Name:="numcompra", Storage:="_Numcompra", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Numcompra() As String
			Get
				Return Me._Numcompra
			End Get
			Set
				If (String.Equals(Me._Numcompra, value) = false) Then
					Me.OnNumcompraChanging(value)
					Me.SendPropertyChanging
					Me._Numcompra = value
					Me.SendPropertyChanged("Numcompra")
					Me.OnNumcompraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="monto", Storage:="_Monto", DbType:="Decimal(18,2)")>  _
		Public Property Monto() As System.Nullable(Of Decimal)
			Get
				Return Me._Monto
			End Get
			Set
				If (Me._Monto.Equals(value) = false) Then
					Me.OnMontoChanging(value)
					Me.SendPropertyChanging
					Me._Monto = value
					Me.SendPropertyChanged("Monto")
					Me.OnMontoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="saldo", Storage:="_Saldo", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Saldo() As Decimal
			Get
				Return Me._Saldo
			End Get
			Set
				If ((Me._Saldo = value)  _
							= false) Then
					Me.OnSaldoChanging(value)
					Me.SendPropertyChanging
					Me._Saldo = value
					Me.SendPropertyChanged("Saldo")
					Me.OnSaldoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="efectivo", Storage:="_Efectivo", DbType:="Decimal(18,2)")>  _
		Public Property Efectivo() As System.Nullable(Of Decimal)
			Get
				Return Me._Efectivo
			End Get
			Set
				If (Me._Efectivo.Equals(value) = false) Then
					Me.OnEfectivoChanging(value)
					Me.SendPropertyChanging
					Me._Efectivo = value
					Me.SendPropertyChanged("Efectivo")
					Me.OnEfectivoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="cheque", Storage:="_Cheque", DbType:="Decimal(18,2)")>  _
		Public Property Cheque() As System.Nullable(Of Decimal)
			Get
				Return Me._Cheque
			End Get
			Set
				If (Me._Cheque.Equals(value) = false) Then
					Me.OnChequeChanging(value)
					Me.SendPropertyChanging
					Me._Cheque = value
					Me.SendPropertyChanged("Cheque")
					Me.OnChequeChanged
				End If
			End Set
		End Property
		
		<Column(Name:="transferencia", Storage:="_Transferencia", DbType:="Decimal(18,2)")>  _
		Public Property Transferencia() As System.Nullable(Of Decimal)
			Get
				Return Me._Transferencia
			End Get
			Set
				If (Me._Transferencia.Equals(value) = false) Then
					Me.OnTransferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Transferencia = value
					Me.SendPropertyChanged("Transferencia")
					Me.OnTransferenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10)")>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me.OnCodcajaChanging(value)
					Me.SendPropertyChanging
					Me._Codcaja = value
					Me.SendPropertyChanged("Codcaja")
					Me.OnCodcajaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="usuario", Storage:="_Usuario", DbType:="VarChar(50)")>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.Agencia")>  _
	Partial Public Class Agencia
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codagencia As String
		
		Private _Nomagencia As String
		
		Private _Diragencia As String
		
		Private _Disagencia As String
		
		Private _Telagencia As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodagenciaChanging(value As String)
    End Sub
    Partial Private Sub OnCodagenciaChanged()
    End Sub
    Partial Private Sub OnNomagenciaChanging(value As String)
    End Sub
    Partial Private Sub OnNomagenciaChanged()
    End Sub
    Partial Private Sub OnDiragenciaChanging(value As String)
    End Sub
    Partial Private Sub OnDiragenciaChanged()
    End Sub
    Partial Private Sub OnDisagenciaChanging(value As String)
    End Sub
    Partial Private Sub OnDisagenciaChanged()
    End Sub
    Partial Private Sub OnTelagenciaChanging(value As String)
    End Sub
    Partial Private Sub OnTelagenciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codagencia", Storage:="_Codagencia", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codagencia() As String
			Get
				Return Me._Codagencia
			End Get
			Set
				If (String.Equals(Me._Codagencia, value) = false) Then
					Me.OnCodagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Codagencia = value
					Me.SendPropertyChanged("Codagencia")
					Me.OnCodagenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nomagencia", Storage:="_Nomagencia", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
		Public Property Nomagencia() As String
			Get
				Return Me._Nomagencia
			End Get
			Set
				If (String.Equals(Me._Nomagencia, value) = false) Then
					Me.OnNomagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Nomagencia = value
					Me.SendPropertyChanged("Nomagencia")
					Me.OnNomagenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="diragencia", Storage:="_Diragencia", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Diragencia() As String
			Get
				Return Me._Diragencia
			End Get
			Set
				If (String.Equals(Me._Diragencia, value) = false) Then
					Me.OnDiragenciaChanging(value)
					Me.SendPropertyChanging
					Me._Diragencia = value
					Me.SendPropertyChanged("Diragencia")
					Me.OnDiragenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="disagencia", Storage:="_Disagencia", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Disagencia() As String
			Get
				Return Me._Disagencia
			End Get
			Set
				If (String.Equals(Me._Disagencia, value) = false) Then
					Me.OnDisagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Disagencia = value
					Me.SendPropertyChanged("Disagencia")
					Me.OnDisagenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="telagencia", Storage:="_Telagencia", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Telagencia() As String
			Get
				Return Me._Telagencia
			End Get
			Set
				If (String.Equals(Me._Telagencia, value) = false) Then
					Me.OnTelagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Telagencia = value
					Me.SendPropertyChanged("Telagencia")
					Me.OnTelagenciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.caja")>  _
	Partial Public Class Caja
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codcaja As String
		
		Private _Descripcion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodcajaChanging(value As String)
    End Sub
    Partial Private Sub OnCodcajaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me.OnCodcajaChanging(value)
					Me.SendPropertyChanging
					Me._Codcaja = value
					Me.SendPropertyChanged("Codcaja")
					Me.OnCodcajaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.Cliente")>  _
	Partial Public Class Cliente
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codcliente As String
		
		Private _Nombres As String
		
		Private _Apellidos As String
		
		Private _Numcedula As String
		
		Private _F_emision As System.Nullable(Of Date)
		
		Private _F_vencimiento As System.Nullable(Of Date)
		
		Private _Direccion As String
		
		Private _F_nacimiento As System.Nullable(Of Date)
		
		Private _Estadocivil As String
		
		Private _Ciudad As String
		
		Private _Telefono As String
		
		Private _Celular As String
		
		Private _Email As String
		
		Private _F_ingreso As System.Nullable(Of Date)
		
		Private _Ocupacion As String
		
		Private _Direccion_negocio As String
		
		Private _Tiempo_neg As String
		
		Private _Otra_ae As String
		
		Private _Desc_otra As String
		
		Private _Nom_cuenta As String
		
		Private _Num_cuenta As String
		
		Private _Nom_banco As String
		
		Private _Monto_mensual As System.Nullable(Of Decimal)
		
		Private _Total_operaciones As System.Nullable(Of Decimal)
		
		Private _Actua_por As String
		
		Private _Nombre_tercero As String
		
		Private _Direccion_tercero As String
		
		Private _Pica As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodclienteChanging(value As String)
    End Sub
    Partial Private Sub OnCodclienteChanged()
    End Sub
    Partial Private Sub OnNombresChanging(value As String)
    End Sub
    Partial Private Sub OnNombresChanged()
    End Sub
    Partial Private Sub OnApellidosChanging(value As String)
    End Sub
    Partial Private Sub OnApellidosChanged()
    End Sub
    Partial Private Sub OnNumcedulaChanging(value As String)
    End Sub
    Partial Private Sub OnNumcedulaChanged()
    End Sub
    Partial Private Sub OnF_emisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnF_emisionChanged()
    End Sub
    Partial Private Sub OnF_vencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnF_vencimientoChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnF_nacimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnF_nacimientoChanged()
    End Sub
    Partial Private Sub OnEstadocivilChanging(value As String)
    End Sub
    Partial Private Sub OnEstadocivilChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnF_ingresoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnF_ingresoChanged()
    End Sub
    Partial Private Sub OnOcupacionChanging(value As String)
    End Sub
    Partial Private Sub OnOcupacionChanged()
    End Sub
    Partial Private Sub OnDireccion_negocioChanging(value As String)
    End Sub
    Partial Private Sub OnDireccion_negocioChanged()
    End Sub
    Partial Private Sub OnTiempo_negChanging(value As String)
    End Sub
    Partial Private Sub OnTiempo_negChanged()
    End Sub
    Partial Private Sub OnOtra_aeChanging(value As String)
    End Sub
    Partial Private Sub OnOtra_aeChanged()
    End Sub
    Partial Private Sub OnDesc_otraChanging(value As String)
    End Sub
    Partial Private Sub OnDesc_otraChanged()
    End Sub
    Partial Private Sub OnNom_cuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNom_cuentaChanged()
    End Sub
    Partial Private Sub OnNum_cuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNum_cuentaChanged()
    End Sub
    Partial Private Sub OnNom_bancoChanging(value As String)
    End Sub
    Partial Private Sub OnNom_bancoChanged()
    End Sub
    Partial Private Sub OnMonto_mensualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMonto_mensualChanged()
    End Sub
    Partial Private Sub OnTotal_operacionesChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotal_operacionesChanged()
    End Sub
    Partial Private Sub OnActua_porChanging(value As String)
    End Sub
    Partial Private Sub OnActua_porChanged()
    End Sub
    Partial Private Sub OnNombre_terceroChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_terceroChanged()
    End Sub
    Partial Private Sub OnDireccion_terceroChanging(value As String)
    End Sub
    Partial Private Sub OnDireccion_terceroChanged()
    End Sub
    Partial Private Sub OnPicaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPicaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me.OnCodclienteChanging(value)
					Me.SendPropertyChanging
					Me._Codcliente = value
					Me.SendPropertyChanged("Codcliente")
					Me.OnCodclienteChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nombres", Storage:="_Nombres", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombres() As String
			Get
				Return Me._Nombres
			End Get
			Set
				If (String.Equals(Me._Nombres, value) = false) Then
					Me.OnNombresChanging(value)
					Me.SendPropertyChanging
					Me._Nombres = value
					Me.SendPropertyChanged("Nombres")
					Me.OnNombresChanged
				End If
			End Set
		End Property
		
		<Column(Name:="apellidos", Storage:="_Apellidos", DbType:="VarChar(50)")>  _
		Public Property Apellidos() As String
			Get
				Return Me._Apellidos
			End Get
			Set
				If (String.Equals(Me._Apellidos, value) = false) Then
					Me.OnApellidosChanging(value)
					Me.SendPropertyChanging
					Me._Apellidos = value
					Me.SendPropertyChanged("Apellidos")
					Me.OnApellidosChanged
				End If
			End Set
		End Property
		
		<Column(Name:="numcedula", Storage:="_Numcedula", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Numcedula() As String
			Get
				Return Me._Numcedula
			End Get
			Set
				If (String.Equals(Me._Numcedula, value) = false) Then
					Me.OnNumcedulaChanging(value)
					Me.SendPropertyChanging
					Me._Numcedula = value
					Me.SendPropertyChanged("Numcedula")
					Me.OnNumcedulaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="f_emision", Storage:="_F_emision", DbType:="Date")>  _
		Public Property F_emision() As System.Nullable(Of Date)
			Get
				Return Me._F_emision
			End Get
			Set
				If (Me._F_emision.Equals(value) = false) Then
					Me.OnF_emisionChanging(value)
					Me.SendPropertyChanging
					Me._F_emision = value
					Me.SendPropertyChanged("F_emision")
					Me.OnF_emisionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="f_vencimiento", Storage:="_F_vencimiento", DbType:="Date")>  _
		Public Property F_vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._F_vencimiento
			End Get
			Set
				If (Me._F_vencimiento.Equals(value) = false) Then
					Me.OnF_vencimientoChanging(value)
					Me.SendPropertyChanging
					Me._F_vencimiento = value
					Me.SendPropertyChanged("F_vencimiento")
					Me.OnF_vencimientoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="direccion", Storage:="_Direccion", DbType:="Text NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="f_nacimiento", Storage:="_F_nacimiento", DbType:="Date")>  _
		Public Property F_nacimiento() As System.Nullable(Of Date)
			Get
				Return Me._F_nacimiento
			End Get
			Set
				If (Me._F_nacimiento.Equals(value) = false) Then
					Me.OnF_nacimientoChanging(value)
					Me.SendPropertyChanging
					Me._F_nacimiento = value
					Me.SendPropertyChanged("F_nacimiento")
					Me.OnF_nacimientoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="estadocivil", Storage:="_Estadocivil", DbType:="VarChar(20)")>  _
		Public Property Estadocivil() As String
			Get
				Return Me._Estadocivil
			End Get
			Set
				If (String.Equals(Me._Estadocivil, value) = false) Then
					Me.OnEstadocivilChanging(value)
					Me.SendPropertyChanging
					Me._Estadocivil = value
					Me.SendPropertyChanged("Estadocivil")
					Me.OnEstadocivilChanged
				End If
			End Set
		End Property
		
		<Column(Name:="ciudad", Storage:="_Ciudad", DbType:="VarChar(50)")>  _
		Public Property Ciudad() As String
			Get
				Return Me._Ciudad
			End Get
			Set
				If (String.Equals(Me._Ciudad, value) = false) Then
					Me.OnCiudadChanging(value)
					Me.SendPropertyChanging
					Me._Ciudad = value
					Me.SendPropertyChanged("Ciudad")
					Me.OnCiudadChanged
				End If
			End Set
		End Property
		
		<Column(Name:="telefono", Storage:="_Telefono", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="celular", Storage:="_Celular", DbType:="VarChar(50)")>  _
		Public Property Celular() As String
			Get
				Return Me._Celular
			End Get
			Set
				If (String.Equals(Me._Celular, value) = false) Then
					Me.OnCelularChanging(value)
					Me.SendPropertyChanging
					Me._Celular = value
					Me.SendPropertyChanged("Celular")
					Me.OnCelularChanged
				End If
			End Set
		End Property
		
		<Column(Name:="email", Storage:="_Email", DbType:="VarChar(50)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Column(Name:="f_ingreso", Storage:="_F_ingreso", DbType:="Date")>  _
		Public Property F_ingreso() As System.Nullable(Of Date)
			Get
				Return Me._F_ingreso
			End Get
			Set
				If (Me._F_ingreso.Equals(value) = false) Then
					Me.OnF_ingresoChanging(value)
					Me.SendPropertyChanging
					Me._F_ingreso = value
					Me.SendPropertyChanged("F_ingreso")
					Me.OnF_ingresoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="ocupacion", Storage:="_Ocupacion", DbType:="VarChar(50)")>  _
		Public Property Ocupacion() As String
			Get
				Return Me._Ocupacion
			End Get
			Set
				If (String.Equals(Me._Ocupacion, value) = false) Then
					Me.OnOcupacionChanging(value)
					Me.SendPropertyChanging
					Me._Ocupacion = value
					Me.SendPropertyChanged("Ocupacion")
					Me.OnOcupacionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="direccion_negocio", Storage:="_Direccion_negocio", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Direccion_negocio() As String
			Get
				Return Me._Direccion_negocio
			End Get
			Set
				If (String.Equals(Me._Direccion_negocio, value) = false) Then
					Me.OnDireccion_negocioChanging(value)
					Me.SendPropertyChanging
					Me._Direccion_negocio = value
					Me.SendPropertyChanged("Direccion_negocio")
					Me.OnDireccion_negocioChanged
				End If
			End Set
		End Property
		
		<Column(Name:="tiempo_neg", Storage:="_Tiempo_neg", DbType:="VarChar(50)")>  _
		Public Property Tiempo_neg() As String
			Get
				Return Me._Tiempo_neg
			End Get
			Set
				If (String.Equals(Me._Tiempo_neg, value) = false) Then
					Me.OnTiempo_negChanging(value)
					Me.SendPropertyChanging
					Me._Tiempo_neg = value
					Me.SendPropertyChanged("Tiempo_neg")
					Me.OnTiempo_negChanged
				End If
			End Set
		End Property
		
		<Column(Name:="otra_ae", Storage:="_Otra_ae", DbType:="VarChar(50)")>  _
		Public Property Otra_ae() As String
			Get
				Return Me._Otra_ae
			End Get
			Set
				If (String.Equals(Me._Otra_ae, value) = false) Then
					Me.OnOtra_aeChanging(value)
					Me.SendPropertyChanging
					Me._Otra_ae = value
					Me.SendPropertyChanged("Otra_ae")
					Me.OnOtra_aeChanged
				End If
			End Set
		End Property
		
		<Column(Name:="desc_otra", Storage:="_Desc_otra", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Desc_otra() As String
			Get
				Return Me._Desc_otra
			End Get
			Set
				If (String.Equals(Me._Desc_otra, value) = false) Then
					Me.OnDesc_otraChanging(value)
					Me.SendPropertyChanging
					Me._Desc_otra = value
					Me.SendPropertyChanged("Desc_otra")
					Me.OnDesc_otraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nom_cuenta", Storage:="_Nom_cuenta", DbType:="VarChar(50)")>  _
		Public Property Nom_cuenta() As String
			Get
				Return Me._Nom_cuenta
			End Get
			Set
				If (String.Equals(Me._Nom_cuenta, value) = false) Then
					Me.OnNom_cuentaChanging(value)
					Me.SendPropertyChanging
					Me._Nom_cuenta = value
					Me.SendPropertyChanged("Nom_cuenta")
					Me.OnNom_cuentaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="num_cuenta", Storage:="_Num_cuenta", DbType:="VarChar(50)")>  _
		Public Property Num_cuenta() As String
			Get
				Return Me._Num_cuenta
			End Get
			Set
				If (String.Equals(Me._Num_cuenta, value) = false) Then
					Me.OnNum_cuentaChanging(value)
					Me.SendPropertyChanging
					Me._Num_cuenta = value
					Me.SendPropertyChanged("Num_cuenta")
					Me.OnNum_cuentaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nom_banco", Storage:="_Nom_banco", DbType:="VarChar(50)")>  _
		Public Property Nom_banco() As String
			Get
				Return Me._Nom_banco
			End Get
			Set
				If (String.Equals(Me._Nom_banco, value) = false) Then
					Me.OnNom_bancoChanging(value)
					Me.SendPropertyChanging
					Me._Nom_banco = value
					Me.SendPropertyChanged("Nom_banco")
					Me.OnNom_bancoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="monto_mensual", Storage:="_Monto_mensual", DbType:="Money")>  _
		Public Property Monto_mensual() As System.Nullable(Of Decimal)
			Get
				Return Me._Monto_mensual
			End Get
			Set
				If (Me._Monto_mensual.Equals(value) = false) Then
					Me.OnMonto_mensualChanging(value)
					Me.SendPropertyChanging
					Me._Monto_mensual = value
					Me.SendPropertyChanged("Monto_mensual")
					Me.OnMonto_mensualChanged
				End If
			End Set
		End Property
		
		<Column(Name:="total_operaciones", Storage:="_Total_operaciones", DbType:="Decimal(12,3)")>  _
		Public Property Total_operaciones() As System.Nullable(Of Decimal)
			Get
				Return Me._Total_operaciones
			End Get
			Set
				If (Me._Total_operaciones.Equals(value) = false) Then
					Me.OnTotal_operacionesChanging(value)
					Me.SendPropertyChanging
					Me._Total_operaciones = value
					Me.SendPropertyChanged("Total_operaciones")
					Me.OnTotal_operacionesChanged
				End If
			End Set
		End Property
		
		<Column(Name:="actua_por", Storage:="_Actua_por", DbType:="VarChar(50)")>  _
		Public Property Actua_por() As String
			Get
				Return Me._Actua_por
			End Get
			Set
				If (String.Equals(Me._Actua_por, value) = false) Then
					Me.OnActua_porChanging(value)
					Me.SendPropertyChanging
					Me._Actua_por = value
					Me.SendPropertyChanged("Actua_por")
					Me.OnActua_porChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nombre_tercero", Storage:="_Nombre_tercero", DbType:="VarChar(100)")>  _
		Public Property Nombre_tercero() As String
			Get
				Return Me._Nombre_tercero
			End Get
			Set
				If (String.Equals(Me._Nombre_tercero, value) = false) Then
					Me.OnNombre_terceroChanging(value)
					Me.SendPropertyChanging
					Me._Nombre_tercero = value
					Me.SendPropertyChanged("Nombre_tercero")
					Me.OnNombre_terceroChanged
				End If
			End Set
		End Property
		
		<Column(Name:="direccion_tercero", Storage:="_Direccion_tercero", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Direccion_tercero() As String
			Get
				Return Me._Direccion_tercero
			End Get
			Set
				If (String.Equals(Me._Direccion_tercero, value) = false) Then
					Me.OnDireccion_terceroChanging(value)
					Me.SendPropertyChanging
					Me._Direccion_tercero = value
					Me.SendPropertyChanged("Direccion_tercero")
					Me.OnDireccion_terceroChanged
				End If
			End Set
		End Property
		
		<Column(Name:="pica", Storage:="_Pica", DbType:="Int")>  _
		Public Property Pica() As System.Nullable(Of Integer)
			Get
				Return Me._Pica
			End Get
			Set
				If (Me._Pica.Equals(value) = false) Then
					Me.OnPicaChanging(value)
					Me.SendPropertyChanging
					Me._Pica = value
					Me.SendPropertyChanged("Pica")
					Me.OnPicaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.ClientePica")>  _
	Partial Public Class ClientePica
		
		Private _Codcliente As String
		
		Private _Nombres As String
		
		Private _Apellidos As String
		
		Private _Numcedula As String
		
		Private _F_emision As System.Nullable(Of Date)
		
		Private _F_vencimiento As System.Nullable(Of Date)
		
		Private _Direccion As String
		
		Private _F_nacimiento As System.Nullable(Of Date)
		
		Private _Estadocivil As String
		
		Private _Ciudad As String
		
		Private _Telefono As String
		
		Private _Celular As String
		
		Private _Email As String
		
		Private _F_ingreso As System.Nullable(Of Date)
		
		Private _Ocupacion As String
		
		Private _Direccion_negocio As String
		
		Private _Tiempo_neg As String
		
		Private _Otra_ae As String
		
		Private _Desc_otra As String
		
		Private _Nom_cuenta As String
		
		Private _Num_cuenta As String
		
		Private _Nom_banco As String
		
		Private _Monto_mensual As System.Nullable(Of Decimal)
		
		Private _Total_operaciones As System.Nullable(Of Decimal)
		
		Private _Actua_por As String
		
		Private _Nombre_tercero As String
		
		Private _Direccion_tercero As String
		
		Private _Pica As System.Nullable(Of Integer)
		
		Private _Nombre_entidad As String
		
		Private _Tipo_relacion As String
		
		Private _Tiempo_mantener As String
		
		Private _Ingreso_mensual As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me._Codcliente = value
				End If
			End Set
		End Property
		
		<Column(Name:="nombres", Storage:="_Nombres", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombres() As String
			Get
				Return Me._Nombres
			End Get
			Set
				If (String.Equals(Me._Nombres, value) = false) Then
					Me._Nombres = value
				End If
			End Set
		End Property
		
		<Column(Name:="apellidos", Storage:="_Apellidos", DbType:="VarChar(50)")>  _
		Public Property Apellidos() As String
			Get
				Return Me._Apellidos
			End Get
			Set
				If (String.Equals(Me._Apellidos, value) = false) Then
					Me._Apellidos = value
				End If
			End Set
		End Property
		
		<Column(Name:="numcedula", Storage:="_Numcedula", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Numcedula() As String
			Get
				Return Me._Numcedula
			End Get
			Set
				If (String.Equals(Me._Numcedula, value) = false) Then
					Me._Numcedula = value
				End If
			End Set
		End Property
		
		<Column(Name:="f_emision", Storage:="_F_emision", DbType:="Date")>  _
		Public Property F_emision() As System.Nullable(Of Date)
			Get
				Return Me._F_emision
			End Get
			Set
				If (Me._F_emision.Equals(value) = false) Then
					Me._F_emision = value
				End If
			End Set
		End Property
		
		<Column(Name:="f_vencimiento", Storage:="_F_vencimiento", DbType:="Date")>  _
		Public Property F_vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._F_vencimiento
			End Get
			Set
				If (Me._F_vencimiento.Equals(value) = false) Then
					Me._F_vencimiento = value
				End If
			End Set
		End Property
		
		<Column(Name:="direccion", Storage:="_Direccion", DbType:="Text NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me._Direccion = value
				End If
			End Set
		End Property
		
		<Column(Name:="f_nacimiento", Storage:="_F_nacimiento", DbType:="Date")>  _
		Public Property F_nacimiento() As System.Nullable(Of Date)
			Get
				Return Me._F_nacimiento
			End Get
			Set
				If (Me._F_nacimiento.Equals(value) = false) Then
					Me._F_nacimiento = value
				End If
			End Set
		End Property
		
		<Column(Name:="estadocivil", Storage:="_Estadocivil", DbType:="VarChar(20)")>  _
		Public Property Estadocivil() As String
			Get
				Return Me._Estadocivil
			End Get
			Set
				If (String.Equals(Me._Estadocivil, value) = false) Then
					Me._Estadocivil = value
				End If
			End Set
		End Property
		
		<Column(Name:="ciudad", Storage:="_Ciudad", DbType:="VarChar(50)")>  _
		Public Property Ciudad() As String
			Get
				Return Me._Ciudad
			End Get
			Set
				If (String.Equals(Me._Ciudad, value) = false) Then
					Me._Ciudad = value
				End If
			End Set
		End Property
		
		<Column(Name:="telefono", Storage:="_Telefono", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me._Telefono = value
				End If
			End Set
		End Property
		
		<Column(Name:="celular", Storage:="_Celular", DbType:="VarChar(50)")>  _
		Public Property Celular() As String
			Get
				Return Me._Celular
			End Get
			Set
				If (String.Equals(Me._Celular, value) = false) Then
					Me._Celular = value
				End If
			End Set
		End Property
		
		<Column(Name:="email", Storage:="_Email", DbType:="VarChar(50)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me._Email = value
				End If
			End Set
		End Property
		
		<Column(Name:="f_ingreso", Storage:="_F_ingreso", DbType:="Date")>  _
		Public Property F_ingreso() As System.Nullable(Of Date)
			Get
				Return Me._F_ingreso
			End Get
			Set
				If (Me._F_ingreso.Equals(value) = false) Then
					Me._F_ingreso = value
				End If
			End Set
		End Property
		
		<Column(Name:="ocupacion", Storage:="_Ocupacion", DbType:="VarChar(50)")>  _
		Public Property Ocupacion() As String
			Get
				Return Me._Ocupacion
			End Get
			Set
				If (String.Equals(Me._Ocupacion, value) = false) Then
					Me._Ocupacion = value
				End If
			End Set
		End Property
		
		<Column(Name:="direccion_negocio", Storage:="_Direccion_negocio", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Direccion_negocio() As String
			Get
				Return Me._Direccion_negocio
			End Get
			Set
				If (String.Equals(Me._Direccion_negocio, value) = false) Then
					Me._Direccion_negocio = value
				End If
			End Set
		End Property
		
		<Column(Name:="tiempo_neg", Storage:="_Tiempo_neg", DbType:="VarChar(50)")>  _
		Public Property Tiempo_neg() As String
			Get
				Return Me._Tiempo_neg
			End Get
			Set
				If (String.Equals(Me._Tiempo_neg, value) = false) Then
					Me._Tiempo_neg = value
				End If
			End Set
		End Property
		
		<Column(Name:="otra_ae", Storage:="_Otra_ae", DbType:="VarChar(50)")>  _
		Public Property Otra_ae() As String
			Get
				Return Me._Otra_ae
			End Get
			Set
				If (String.Equals(Me._Otra_ae, value) = false) Then
					Me._Otra_ae = value
				End If
			End Set
		End Property
		
		<Column(Name:="desc_otra", Storage:="_Desc_otra", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Desc_otra() As String
			Get
				Return Me._Desc_otra
			End Get
			Set
				If (String.Equals(Me._Desc_otra, value) = false) Then
					Me._Desc_otra = value
				End If
			End Set
		End Property
		
		<Column(Name:="nom_cuenta", Storage:="_Nom_cuenta", DbType:="VarChar(50)")>  _
		Public Property Nom_cuenta() As String
			Get
				Return Me._Nom_cuenta
			End Get
			Set
				If (String.Equals(Me._Nom_cuenta, value) = false) Then
					Me._Nom_cuenta = value
				End If
			End Set
		End Property
		
		<Column(Name:="num_cuenta", Storage:="_Num_cuenta", DbType:="VarChar(50)")>  _
		Public Property Num_cuenta() As String
			Get
				Return Me._Num_cuenta
			End Get
			Set
				If (String.Equals(Me._Num_cuenta, value) = false) Then
					Me._Num_cuenta = value
				End If
			End Set
		End Property
		
		<Column(Name:="nom_banco", Storage:="_Nom_banco", DbType:="VarChar(50)")>  _
		Public Property Nom_banco() As String
			Get
				Return Me._Nom_banco
			End Get
			Set
				If (String.Equals(Me._Nom_banco, value) = false) Then
					Me._Nom_banco = value
				End If
			End Set
		End Property
		
		<Column(Name:="monto_mensual", Storage:="_Monto_mensual", DbType:="Money")>  _
		Public Property Monto_mensual() As System.Nullable(Of Decimal)
			Get
				Return Me._Monto_mensual
			End Get
			Set
				If (Me._Monto_mensual.Equals(value) = false) Then
					Me._Monto_mensual = value
				End If
			End Set
		End Property
		
		<Column(Name:="total_operaciones", Storage:="_Total_operaciones", DbType:="Decimal(12,3)")>  _
		Public Property Total_operaciones() As System.Nullable(Of Decimal)
			Get
				Return Me._Total_operaciones
			End Get
			Set
				If (Me._Total_operaciones.Equals(value) = false) Then
					Me._Total_operaciones = value
				End If
			End Set
		End Property
		
		<Column(Name:="actua_por", Storage:="_Actua_por", DbType:="VarChar(50)")>  _
		Public Property Actua_por() As String
			Get
				Return Me._Actua_por
			End Get
			Set
				If (String.Equals(Me._Actua_por, value) = false) Then
					Me._Actua_por = value
				End If
			End Set
		End Property
		
		<Column(Name:="nombre_tercero", Storage:="_Nombre_tercero", DbType:="VarChar(100)")>  _
		Public Property Nombre_tercero() As String
			Get
				Return Me._Nombre_tercero
			End Get
			Set
				If (String.Equals(Me._Nombre_tercero, value) = false) Then
					Me._Nombre_tercero = value
				End If
			End Set
		End Property
		
		<Column(Name:="direccion_tercero", Storage:="_Direccion_tercero", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Direccion_tercero() As String
			Get
				Return Me._Direccion_tercero
			End Get
			Set
				If (String.Equals(Me._Direccion_tercero, value) = false) Then
					Me._Direccion_tercero = value
				End If
			End Set
		End Property
		
		<Column(Name:="pica", Storage:="_Pica", DbType:="Int")>  _
		Public Property Pica() As System.Nullable(Of Integer)
			Get
				Return Me._Pica
			End Get
			Set
				If (Me._Pica.Equals(value) = false) Then
					Me._Pica = value
				End If
			End Set
		End Property
		
		<Column(Name:="nombre_entidad", Storage:="_Nombre_entidad", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre_entidad() As String
			Get
				Return Me._Nombre_entidad
			End Get
			Set
				If (String.Equals(Me._Nombre_entidad, value) = false) Then
					Me._Nombre_entidad = value
				End If
			End Set
		End Property
		
		<Column(Name:="tipo_relacion", Storage:="_Tipo_relacion", DbType:="VarChar(50)")>  _
		Public Property Tipo_relacion() As String
			Get
				Return Me._Tipo_relacion
			End Get
			Set
				If (String.Equals(Me._Tipo_relacion, value) = false) Then
					Me._Tipo_relacion = value
				End If
			End Set
		End Property
		
		<Column(Name:="tiempo_mantener", Storage:="_Tiempo_mantener", DbType:="VarChar(50)")>  _
		Public Property Tiempo_mantener() As String
			Get
				Return Me._Tiempo_mantener
			End Get
			Set
				If (String.Equals(Me._Tiempo_mantener, value) = false) Then
					Me._Tiempo_mantener = value
				End If
			End Set
		End Property
		
		<Column(Name:="ingreso_mensual", Storage:="_Ingreso_mensual", DbType:="Money")>  _
		Public Property Ingreso_mensual() As System.Nullable(Of Decimal)
			Get
				Return Me._Ingreso_mensual
			End Get
			Set
				If (Me._Ingreso_mensual.Equals(value) = false) Then
					Me._Ingreso_mensual = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.compras")>  _
	Partial Public Class Compras
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codagencia As String
		
		Private _Numcompra As String
		
		Private _Codcliente As String
		
		Private _Codcaja As String
		
		Private _Peso As Decimal
		
		Private _Codmoneda As String
		
		Private _Total As Decimal
		
		Private _Fecha As Date
		
		Private _Codestado As Integer
		
		Private _Usuario As String
		
		Private _Hora As String
		
		Private _Forma_pago As String
		
		Private _Dgnumdes As Integer
		
		Private _Efectivo As Decimal
		
		Private _Cheque As Decimal
		
		Private _Transferencia As Decimal
		
		Private _Por_cobrar As Decimal
		
		Private _Por_pagar As Decimal
		
		Private _Adelantos As Decimal
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodagenciaChanging(value As String)
    End Sub
    Partial Private Sub OnCodagenciaChanged()
    End Sub
    Partial Private Sub OnNumcompraChanging(value As String)
    End Sub
    Partial Private Sub OnNumcompraChanged()
    End Sub
    Partial Private Sub OnCodclienteChanging(value As String)
    End Sub
    Partial Private Sub OnCodclienteChanged()
    End Sub
    Partial Private Sub OnCodcajaChanging(value As String)
    End Sub
    Partial Private Sub OnCodcajaChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    Partial Private Sub OnCodmonedaChanging(value As String)
    End Sub
    Partial Private Sub OnCodmonedaChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnCodestadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodestadoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnForma_pagoChanging(value As String)
    End Sub
    Partial Private Sub OnForma_pagoChanged()
    End Sub
    Partial Private Sub OnDgnumdesChanging(value As Integer)
    End Sub
    Partial Private Sub OnDgnumdesChanged()
    End Sub
    Partial Private Sub OnEfectivoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEfectivoChanged()
    End Sub
    Partial Private Sub OnChequeChanging(value As Decimal)
    End Sub
    Partial Private Sub OnChequeChanged()
    End Sub
    Partial Private Sub OnTransferenciaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTransferenciaChanged()
    End Sub
    Partial Private Sub OnPor_cobrarChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPor_cobrarChanged()
    End Sub
    Partial Private Sub OnPor_pagarChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPor_pagarChanged()
    End Sub
    Partial Private Sub OnAdelantosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAdelantosChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codagencia", Storage:="_Codagencia", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codagencia() As String
			Get
				Return Me._Codagencia
			End Get
			Set
				If (String.Equals(Me._Codagencia, value) = false) Then
					Me.OnCodagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Codagencia = value
					Me.SendPropertyChanged("Codagencia")
					Me.OnCodagenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="numcompra", Storage:="_Numcompra", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Numcompra() As String
			Get
				Return Me._Numcompra
			End Get
			Set
				If (String.Equals(Me._Numcompra, value) = false) Then
					Me.OnNumcompraChanging(value)
					Me.SendPropertyChanging
					Me._Numcompra = value
					Me.SendPropertyChanged("Numcompra")
					Me.OnNumcompraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me.OnCodclienteChanging(value)
					Me.SendPropertyChanging
					Me._Codcliente = value
					Me.SendPropertyChanged("Codcliente")
					Me.OnCodclienteChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me.OnCodcajaChanging(value)
					Me.SendPropertyChanging
					Me._Codcaja = value
					Me.SendPropertyChanged("Codcaja")
					Me.OnCodcajaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="peso", Storage:="_Peso", DbType:="Decimal(11,2) NOT NULL")>  _
		Public Property Peso() As Decimal
			Get
				Return Me._Peso
			End Get
			Set
				If ((Me._Peso = value)  _
							= false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codmoneda", Storage:="_Codmoneda", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codmoneda() As String
			Get
				Return Me._Codmoneda
			End Get
			Set
				If (String.Equals(Me._Codmoneda, value) = false) Then
					Me.OnCodmonedaChanging(value)
					Me.SendPropertyChanging
					Me._Codmoneda = value
					Me.SendPropertyChanged("Codmoneda")
					Me.OnCodmonedaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="total", Storage:="_Total", DbType:="Decimal(15,2) NOT NULL")>  _
		Public Property Total() As Decimal
			Get
				Return Me._Total
			End Get
			Set
				If ((Me._Total = value)  _
							= false) Then
					Me.OnTotalChanging(value)
					Me.SendPropertyChanging
					Me._Total = value
					Me.SendPropertyChanged("Total")
					Me.OnTotalChanged
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codestado", Storage:="_Codestado", DbType:="Int NOT NULL")>  _
		Public Property Codestado() As Integer
			Get
				Return Me._Codestado
			End Get
			Set
				If ((Me._Codestado = value)  _
							= false) Then
					Me.OnCodestadoChanging(value)
					Me.SendPropertyChanging
					Me._Codestado = value
					Me.SendPropertyChanged("Codestado")
					Me.OnCodestadoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="usuario", Storage:="_Usuario", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Column(Name:="hora", Storage:="_Hora", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Hora() As String
			Get
				Return Me._Hora
			End Get
			Set
				If (String.Equals(Me._Hora, value) = false) Then
					Me.OnHoraChanging(value)
					Me.SendPropertyChanging
					Me._Hora = value
					Me.SendPropertyChanged("Hora")
					Me.OnHoraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="forma_pago", Storage:="_Forma_pago", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Forma_pago() As String
			Get
				Return Me._Forma_pago
			End Get
			Set
				If (String.Equals(Me._Forma_pago, value) = false) Then
					Me.OnForma_pagoChanging(value)
					Me.SendPropertyChanging
					Me._Forma_pago = value
					Me.SendPropertyChanged("Forma_pago")
					Me.OnForma_pagoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgnumdes", Storage:="_Dgnumdes", DbType:="Int NOT NULL")>  _
		Public Property Dgnumdes() As Integer
			Get
				Return Me._Dgnumdes
			End Get
			Set
				If ((Me._Dgnumdes = value)  _
							= false) Then
					Me.OnDgnumdesChanging(value)
					Me.SendPropertyChanging
					Me._Dgnumdes = value
					Me.SendPropertyChanged("Dgnumdes")
					Me.OnDgnumdesChanged
				End If
			End Set
		End Property
		
		<Column(Name:="efectivo", Storage:="_Efectivo", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Efectivo() As Decimal
			Get
				Return Me._Efectivo
			End Get
			Set
				If ((Me._Efectivo = value)  _
							= false) Then
					Me.OnEfectivoChanging(value)
					Me.SendPropertyChanging
					Me._Efectivo = value
					Me.SendPropertyChanged("Efectivo")
					Me.OnEfectivoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="cheque", Storage:="_Cheque", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Cheque() As Decimal
			Get
				Return Me._Cheque
			End Get
			Set
				If ((Me._Cheque = value)  _
							= false) Then
					Me.OnChequeChanging(value)
					Me.SendPropertyChanging
					Me._Cheque = value
					Me.SendPropertyChanged("Cheque")
					Me.OnChequeChanged
				End If
			End Set
		End Property
		
		<Column(Name:="transferencia", Storage:="_Transferencia", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Transferencia() As Decimal
			Get
				Return Me._Transferencia
			End Get
			Set
				If ((Me._Transferencia = value)  _
							= false) Then
					Me.OnTransferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Transferencia = value
					Me.SendPropertyChanged("Transferencia")
					Me.OnTransferenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="por_cobrar", Storage:="_Por_cobrar", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Por_cobrar() As Decimal
			Get
				Return Me._Por_cobrar
			End Get
			Set
				If ((Me._Por_cobrar = value)  _
							= false) Then
					Me.OnPor_cobrarChanging(value)
					Me.SendPropertyChanging
					Me._Por_cobrar = value
					Me.SendPropertyChanged("Por_cobrar")
					Me.OnPor_cobrarChanged
				End If
			End Set
		End Property
		
		<Column(Name:="por_pagar", Storage:="_Por_pagar", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Por_pagar() As Decimal
			Get
				Return Me._Por_pagar
			End Get
			Set
				If ((Me._Por_pagar = value)  _
							= false) Then
					Me.OnPor_pagarChanging(value)
					Me.SendPropertyChanging
					Me._Por_pagar = value
					Me.SendPropertyChanged("Por_pagar")
					Me.OnPor_pagarChanged
				End If
			End Set
		End Property
		
		<Column(Name:="adelantos", Storage:="_Adelantos", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Adelantos() As Decimal
			Get
				Return Me._Adelantos
			End Get
			Set
				If ((Me._Adelantos = value)  _
							= false) Then
					Me.OnAdelantosChanging(value)
					Me.SendPropertyChanging
					Me._Adelantos = value
					Me.SendPropertyChanged("Adelantos")
					Me.OnAdelantosChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.descargueByCompra")>  _
	Partial Public Class DescargueByCompra
		
		Private _Dgnumdes As Integer
		
		Private _Dgfecdes As Date
		
		Private _Numcompra As String
		
		Private _Fecha As Date
		
		Private _Codcliente As String
		
		Private _Nombres As String
		
		Private _Apellidos As String
		
		Private _Peso As Decimal
		
		Private _Total As Decimal
		
		Private _Cantcompra As Integer
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="dgnumdes", Storage:="_Dgnumdes", DbType:="Int NOT NULL")>  _
		Public Property Dgnumdes() As Integer
			Get
				Return Me._Dgnumdes
			End Get
			Set
				If ((Me._Dgnumdes = value)  _
							= false) Then
					Me._Dgnumdes = value
				End If
			End Set
		End Property
		
		<Column(Name:="dgfecdes", Storage:="_Dgfecdes", DbType:="Date NOT NULL")>  _
		Public Property Dgfecdes() As Date
			Get
				Return Me._Dgfecdes
			End Get
			Set
				If ((Me._Dgfecdes = value)  _
							= false) Then
					Me._Dgfecdes = value
				End If
			End Set
		End Property
		
		<Column(Name:="numcompra", Storage:="_Numcompra", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Numcompra() As String
			Get
				Return Me._Numcompra
			End Get
			Set
				If (String.Equals(Me._Numcompra, value) = false) Then
					Me._Numcompra = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me._Codcliente = value
				End If
			End Set
		End Property
		
		<Column(Name:="nombres", Storage:="_Nombres", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombres() As String
			Get
				Return Me._Nombres
			End Get
			Set
				If (String.Equals(Me._Nombres, value) = false) Then
					Me._Nombres = value
				End If
			End Set
		End Property
		
		<Column(Name:="apellidos", Storage:="_Apellidos", DbType:="VarChar(50)")>  _
		Public Property Apellidos() As String
			Get
				Return Me._Apellidos
			End Get
			Set
				If (String.Equals(Me._Apellidos, value) = false) Then
					Me._Apellidos = value
				End If
			End Set
		End Property
		
		<Column(Name:="peso", Storage:="_Peso", DbType:="Decimal(11,2) NOT NULL")>  _
		Public Property Peso() As Decimal
			Get
				Return Me._Peso
			End Get
			Set
				If ((Me._Peso = value)  _
							= false) Then
					Me._Peso = value
				End If
			End Set
		End Property
		
		<Column(Name:="total", Storage:="_Total", DbType:="Decimal(15,2) NOT NULL")>  _
		Public Property Total() As Decimal
			Get
				Return Me._Total
			End Get
			Set
				If ((Me._Total = value)  _
							= false) Then
					Me._Total = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Cantcompra", DbType:="Int NOT NULL")>  _
		Public Property Cantcompra() As Integer
			Get
				Return Me._Cantcompra
			End Get
			Set
				If ((Me._Cantcompra = value)  _
							= false) Then
					Me._Cantcompra = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.descargues")>  _
	Partial Public Class Descargues
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Dgcodage As String
		
		Private _Dgcodcaj As String
		
		Private _Dgusuari As String
		
		Private _Dgnumdes As Integer
		
		Private _Dgcancom As Integer
		
		Private _Dgpesbrt As Decimal
		
		Private _Dgpesntt As Decimal
		
		Private _Dgimptcom As Decimal
		
		Private _Dgfecdes As Date
		
		Private _Dgfecgen As Date
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDgcodageChanging(value As String)
    End Sub
    Partial Private Sub OnDgcodageChanged()
    End Sub
    Partial Private Sub OnDgcodcajChanging(value As String)
    End Sub
    Partial Private Sub OnDgcodcajChanged()
    End Sub
    Partial Private Sub OnDgusuariChanging(value As String)
    End Sub
    Partial Private Sub OnDgusuariChanged()
    End Sub
    Partial Private Sub OnDgnumdesChanging(value As Integer)
    End Sub
    Partial Private Sub OnDgnumdesChanged()
    End Sub
    Partial Private Sub OnDgcancomChanging(value As Integer)
    End Sub
    Partial Private Sub OnDgcancomChanged()
    End Sub
    Partial Private Sub OnDgpesbrtChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDgpesbrtChanged()
    End Sub
    Partial Private Sub OnDgpesnttChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDgpesnttChanged()
    End Sub
    Partial Private Sub OnDgimptcomChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDgimptcomChanged()
    End Sub
    Partial Private Sub OnDgfecdesChanging(value As Date)
    End Sub
    Partial Private Sub OnDgfecdesChanged()
    End Sub
    Partial Private Sub OnDgfecgenChanging(value As Date)
    End Sub
    Partial Private Sub OnDgfecgenChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="dgcodage", Storage:="_Dgcodage", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
		Public Property Dgcodage() As String
			Get
				Return Me._Dgcodage
			End Get
			Set
				If (String.Equals(Me._Dgcodage, value) = false) Then
					Me.OnDgcodageChanging(value)
					Me.SendPropertyChanging
					Me._Dgcodage = value
					Me.SendPropertyChanged("Dgcodage")
					Me.OnDgcodageChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgcodcaj", Storage:="_Dgcodcaj", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
		Public Property Dgcodcaj() As String
			Get
				Return Me._Dgcodcaj
			End Get
			Set
				If (String.Equals(Me._Dgcodcaj, value) = false) Then
					Me.OnDgcodcajChanging(value)
					Me.SendPropertyChanging
					Me._Dgcodcaj = value
					Me.SendPropertyChanged("Dgcodcaj")
					Me.OnDgcodcajChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgusuari", Storage:="_Dgusuari", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Dgusuari() As String
			Get
				Return Me._Dgusuari
			End Get
			Set
				If (String.Equals(Me._Dgusuari, value) = false) Then
					Me.OnDgusuariChanging(value)
					Me.SendPropertyChanging
					Me._Dgusuari = value
					Me.SendPropertyChanged("Dgusuari")
					Me.OnDgusuariChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgnumdes", Storage:="_Dgnumdes", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Dgnumdes() As Integer
			Get
				Return Me._Dgnumdes
			End Get
			Set
				If ((Me._Dgnumdes = value)  _
							= false) Then
					Me.OnDgnumdesChanging(value)
					Me.SendPropertyChanging
					Me._Dgnumdes = value
					Me.SendPropertyChanged("Dgnumdes")
					Me.OnDgnumdesChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgcancom", Storage:="_Dgcancom", DbType:="Int NOT NULL")>  _
		Public Property Dgcancom() As Integer
			Get
				Return Me._Dgcancom
			End Get
			Set
				If ((Me._Dgcancom = value)  _
							= false) Then
					Me.OnDgcancomChanging(value)
					Me.SendPropertyChanging
					Me._Dgcancom = value
					Me.SendPropertyChanged("Dgcancom")
					Me.OnDgcancomChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgpesbrt", Storage:="_Dgpesbrt", DbType:="Decimal(11,2) NOT NULL")>  _
		Public Property Dgpesbrt() As Decimal
			Get
				Return Me._Dgpesbrt
			End Get
			Set
				If ((Me._Dgpesbrt = value)  _
							= false) Then
					Me.OnDgpesbrtChanging(value)
					Me.SendPropertyChanging
					Me._Dgpesbrt = value
					Me.SendPropertyChanged("Dgpesbrt")
					Me.OnDgpesbrtChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgpesntt", Storage:="_Dgpesntt", DbType:="Decimal(11,2) NOT NULL")>  _
		Public Property Dgpesntt() As Decimal
			Get
				Return Me._Dgpesntt
			End Get
			Set
				If ((Me._Dgpesntt = value)  _
							= false) Then
					Me.OnDgpesnttChanging(value)
					Me.SendPropertyChanging
					Me._Dgpesntt = value
					Me.SendPropertyChanged("Dgpesntt")
					Me.OnDgpesnttChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgimptcom", Storage:="_Dgimptcom", DbType:="Decimal(11,2) NOT NULL")>  _
		Public Property Dgimptcom() As Decimal
			Get
				Return Me._Dgimptcom
			End Get
			Set
				If ((Me._Dgimptcom = value)  _
							= false) Then
					Me.OnDgimptcomChanging(value)
					Me.SendPropertyChanging
					Me._Dgimptcom = value
					Me.SendPropertyChanged("Dgimptcom")
					Me.OnDgimptcomChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgfecdes", Storage:="_Dgfecdes", DbType:="Date NOT NULL")>  _
		Public Property Dgfecdes() As Date
			Get
				Return Me._Dgfecdes
			End Get
			Set
				If ((Me._Dgfecdes = value)  _
							= false) Then
					Me.OnDgfecdesChanging(value)
					Me.SendPropertyChanging
					Me._Dgfecdes = value
					Me.SendPropertyChanged("Dgfecdes")
					Me.OnDgfecdesChanged
				End If
			End Set
		End Property
		
		<Column(Name:="dgfecgen", Storage:="_Dgfecgen", DbType:="Date NOT NULL")>  _
		Public Property Dgfecgen() As Date
			Get
				Return Me._Dgfecgen
			End Get
			Set
				If ((Me._Dgfecgen = value)  _
							= false) Then
					Me.OnDgfecgenChanging(value)
					Me.SendPropertyChanging
					Me._Dgfecgen = value
					Me.SendPropertyChanged("Dgfecgen")
					Me.OnDgfecgenChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.det_compra")>  _
	Partial Public Class Det_compra
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Numcompra As String
		
		Private _Descripcion As String
		
		Private _Kilate As String
		
		Private _Preciok As Decimal
		
		Private _Peso As Decimal
		
		Private _Importe As System.Nullable(Of Decimal)
		
		Private _Linea As Integer
		
		Private _Kilshowdoc As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNumcompraChanging(value As String)
    End Sub
    Partial Private Sub OnNumcompraChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnKilateChanging(value As String)
    End Sub
    Partial Private Sub OnKilateChanged()
    End Sub
    Partial Private Sub OnPreciokChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPreciokChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnLineaChanging(value As Integer)
    End Sub
    Partial Private Sub OnLineaChanged()
    End Sub
    Partial Private Sub OnKilshowdocChanging(value As String)
    End Sub
    Partial Private Sub OnKilshowdocChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="numcompra", Storage:="_Numcompra", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Numcompra() As String
			Get
				Return Me._Numcompra
			End Get
			Set
				If (String.Equals(Me._Numcompra, value) = false) Then
					Me.OnNumcompraChanging(value)
					Me.SendPropertyChanging
					Me._Numcompra = value
					Me.SendPropertyChanged("Numcompra")
					Me.OnNumcompraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="kilate", Storage:="_Kilate", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Kilate() As String
			Get
				Return Me._Kilate
			End Get
			Set
				If (String.Equals(Me._Kilate, value) = false) Then
					Me.OnKilateChanging(value)
					Me.SendPropertyChanging
					Me._Kilate = value
					Me.SendPropertyChanged("Kilate")
					Me.OnKilateChanged
				End If
			End Set
		End Property
		
		<Column(Name:="preciok", Storage:="_Preciok", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Preciok() As Decimal
			Get
				Return Me._Preciok
			End Get
			Set
				If ((Me._Preciok = value)  _
							= false) Then
					Me.OnPreciokChanging(value)
					Me.SendPropertyChanging
					Me._Preciok = value
					Me.SendPropertyChanged("Preciok")
					Me.OnPreciokChanged
				End If
			End Set
		End Property
		
		<Column(Name:="peso", Storage:="_Peso", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Peso() As Decimal
			Get
				Return Me._Peso
			End Get
			Set
				If ((Me._Peso = value)  _
							= false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="importe", Storage:="_Importe", DbType:="Decimal(18,2)")>  _
		Public Property Importe() As System.Nullable(Of Decimal)
			Get
				Return Me._Importe
			End Get
			Set
				If (Me._Importe.Equals(value) = false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Column(Name:="linea", Storage:="_Linea", DbType:="Int NOT NULL")>  _
		Public Property Linea() As Integer
			Get
				Return Me._Linea
			End Get
			Set
				If ((Me._Linea = value)  _
							= false) Then
					Me.OnLineaChanging(value)
					Me.SendPropertyChanging
					Me._Linea = value
					Me.SendPropertyChanged("Linea")
					Me.OnLineaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="kilshowdoc", Storage:="_Kilshowdoc", DbType:="VarChar(20)")>  _
		Public Property Kilshowdoc() As String
			Get
				Return Me._Kilshowdoc
			End Get
			Set
				If (String.Equals(Me._Kilshowdoc, value) = false) Then
					Me.OnKilshowdocChanging(value)
					Me.SendPropertyChanging
					Me._Kilshowdoc = value
					Me.SendPropertyChanged("Kilshowdoc")
					Me.OnKilshowdocChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.detacaja")>  _
	Partial Public Class Detacaja
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Idcaja As Decimal
		
		Private _Idmov As Integer
		
		Private _Hora As String
		
		Private _Fecha As System.Nullable(Of Date)
		
		Private _Concepto As String
		
		Private _Efectivo As System.Nullable(Of Decimal)
		
		Private _Referencia As String
		
		Private _Cheque As System.Nullable(Of Decimal)
		
		Private _Transferencia As System.Nullable(Of Decimal)
		
		Private _Codcaja As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdcajaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdcajaChanged()
    End Sub
    Partial Private Sub OnIdmovChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdmovChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnEfectivoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEfectivoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnChequeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnChequeChanged()
    End Sub
    Partial Private Sub OnTransferenciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTransferenciaChanged()
    End Sub
    Partial Private Sub OnCodcajaChanging(value As String)
    End Sub
    Partial Private Sub OnCodcajaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="idcaja", Storage:="_Idcaja", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Idcaja() As Decimal
			Get
				Return Me._Idcaja
			End Get
			Set
				If ((Me._Idcaja = value)  _
							= false) Then
					Me.OnIdcajaChanging(value)
					Me.SendPropertyChanging
					Me._Idcaja = value
					Me.SendPropertyChanged("Idcaja")
					Me.OnIdcajaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="idmov", Storage:="_Idmov", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Idmov() As Integer
			Get
				Return Me._Idmov
			End Get
			Set
				If ((Me._Idmov = value)  _
							= false) Then
					Me.OnIdmovChanging(value)
					Me.SendPropertyChanging
					Me._Idmov = value
					Me.SendPropertyChanged("Idmov")
					Me.OnIdmovChanged
				End If
			End Set
		End Property
		
		<Column(Name:="hora", Storage:="_Hora", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Hora() As String
			Get
				Return Me._Hora
			End Get
			Set
				If (String.Equals(Me._Hora, value) = false) Then
					Me.OnHoraChanging(value)
					Me.SendPropertyChanging
					Me._Hora = value
					Me.SendPropertyChanged("Hora")
					Me.OnHoraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date")>  _
		Public Property Fecha() As System.Nullable(Of Date)
			Get
				Return Me._Fecha
			End Get
			Set
				If (Me._Fecha.Equals(value) = false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="concepto", Storage:="_Concepto", DbType:="VarChar(250)")>  _
		Public Property Concepto() As String
			Get
				Return Me._Concepto
			End Get
			Set
				If (String.Equals(Me._Concepto, value) = false) Then
					Me.OnConceptoChanging(value)
					Me.SendPropertyChanging
					Me._Concepto = value
					Me.SendPropertyChanged("Concepto")
					Me.OnConceptoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="efectivo", Storage:="_Efectivo", DbType:="Decimal(18,2)")>  _
		Public Property Efectivo() As System.Nullable(Of Decimal)
			Get
				Return Me._Efectivo
			End Get
			Set
				If (Me._Efectivo.Equals(value) = false) Then
					Me.OnEfectivoChanging(value)
					Me.SendPropertyChanging
					Me._Efectivo = value
					Me.SendPropertyChanged("Efectivo")
					Me.OnEfectivoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="referencia", Storage:="_Referencia", DbType:="VarChar(250)")>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="cheque", Storage:="_Cheque", DbType:="Decimal(18,2)")>  _
		Public Property Cheque() As System.Nullable(Of Decimal)
			Get
				Return Me._Cheque
			End Get
			Set
				If (Me._Cheque.Equals(value) = false) Then
					Me.OnChequeChanging(value)
					Me.SendPropertyChanging
					Me._Cheque = value
					Me.SendPropertyChanged("Cheque")
					Me.OnChequeChanged
				End If
			End Set
		End Property
		
		<Column(Name:="transferencia", Storage:="_Transferencia", DbType:="Decimal(18,2)")>  _
		Public Property Transferencia() As System.Nullable(Of Decimal)
			Get
				Return Me._Transferencia
			End Get
			Set
				If (Me._Transferencia.Equals(value) = false) Then
					Me.OnTransferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Transferencia = value
					Me.SendPropertyChanged("Transferencia")
					Me.OnTransferenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10)")>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me.OnCodcajaChanging(value)
					Me.SendPropertyChanging
					Me._Codcaja = value
					Me.SendPropertyChanged("Codcaja")
					Me.OnCodcajaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.Estado")>  _
	Partial Public Class Estado
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codestado As Integer
		
		Private _Desc_estado As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodestadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodestadoChanged()
    End Sub
    Partial Private Sub OnDesc_estadoChanging(value As String)
    End Sub
    Partial Private Sub OnDesc_estadoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codestado", Storage:="_Codestado", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Codestado() As Integer
			Get
				Return Me._Codestado
			End Get
			Set
				If ((Me._Codestado = value)  _
							= false) Then
					Me.OnCodestadoChanging(value)
					Me.SendPropertyChanging
					Me._Codestado = value
					Me.SendPropertyChanged("Codestado")
					Me.OnCodestadoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="desc_estado", Storage:="_Desc_estado", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Desc_estado() As String
			Get
				Return Me._Desc_estado
			End Get
			Set
				If (String.Equals(Me._Desc_estado, value) = false) Then
					Me.OnDesc_estadoChanging(value)
					Me.SendPropertyChanging
					Me._Desc_estado = value
					Me.SendPropertyChanged("Desc_estado")
					Me.OnDesc_estadoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.forma_pago")>  _
	Partial Public Class Forma_pago
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Idmov As String
		
		Private _Descripcion As System.Nullable(Of Decimal)
		
		Private _Naturaleza As System.Nullable(Of Decimal)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdmovChanging(value As String)
    End Sub
    Partial Private Sub OnIdmovChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnNaturalezaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNaturalezaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="idmov", Storage:="_Idmov", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Idmov() As String
			Get
				Return Me._Idmov
			End Get
			Set
				If (String.Equals(Me._Idmov, value) = false) Then
					Me.OnIdmovChanging(value)
					Me.SendPropertyChanging
					Me._Idmov = value
					Me.SendPropertyChanged("Idmov")
					Me.OnIdmovChanged
				End If
			End Set
		End Property
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="Decimal(12,2)")>  _
		Public Property Descripcion() As System.Nullable(Of Decimal)
			Get
				Return Me._Descripcion
			End Get
			Set
				If (Me._Descripcion.Equals(value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="naturaleza", Storage:="_Naturaleza", DbType:="Decimal(12,2)")>  _
		Public Property Naturaleza() As System.Nullable(Of Decimal)
			Get
				Return Me._Naturaleza
			End Get
			Set
				If (Me._Naturaleza.Equals(value) = false) Then
					Me.OnNaturalezaChanging(value)
					Me.SendPropertyChanging
					Me._Naturaleza = value
					Me.SendPropertyChanged("Naturaleza")
					Me.OnNaturalezaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.Ids")>  _
	Partial Public Class Ids
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codcliente As Integer
		
		Private _Codagencia As System.Nullable(Of Integer)
		
		Private _Numcompra As System.Nullable(Of Integer)
		
		Private _Idadelanto As System.Nullable(Of Integer)
		
		Private _Idcompras As System.Nullable(Of Integer)
		
		Private _Id_adelantos As System.Nullable(Of Integer)
		
		Private _Saldo_anterior As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodclienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodclienteChanged()
    End Sub
    Partial Private Sub OnCodagenciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCodagenciaChanged()
    End Sub
    Partial Private Sub OnNumcompraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumcompraChanged()
    End Sub
    Partial Private Sub OnIdadelantoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdadelantoChanged()
    End Sub
    Partial Private Sub OnIdcomprasChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdcomprasChanged()
    End Sub
    Partial Private Sub OnId_adelantosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_adelantosChanged()
    End Sub
    Partial Private Sub OnSaldo_anteriorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSaldo_anteriorChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Codcliente() As Integer
			Get
				Return Me._Codcliente
			End Get
			Set
				If ((Me._Codcliente = value)  _
							= false) Then
					Me.OnCodclienteChanging(value)
					Me.SendPropertyChanging
					Me._Codcliente = value
					Me.SendPropertyChanged("Codcliente")
					Me.OnCodclienteChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codagencia", Storage:="_Codagencia", DbType:="Int")>  _
		Public Property Codagencia() As System.Nullable(Of Integer)
			Get
				Return Me._Codagencia
			End Get
			Set
				If (Me._Codagencia.Equals(value) = false) Then
					Me.OnCodagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Codagencia = value
					Me.SendPropertyChanged("Codagencia")
					Me.OnCodagenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="numcompra", Storage:="_Numcompra", DbType:="Int")>  _
		Public Property Numcompra() As System.Nullable(Of Integer)
			Get
				Return Me._Numcompra
			End Get
			Set
				If (Me._Numcompra.Equals(value) = false) Then
					Me.OnNumcompraChanging(value)
					Me.SendPropertyChanging
					Me._Numcompra = value
					Me.SendPropertyChanged("Numcompra")
					Me.OnNumcompraChanged
				End If
			End Set
		End Property
		
		<Column(Name:="idadelanto", Storage:="_Idadelanto", DbType:="Int")>  _
		Public Property Idadelanto() As System.Nullable(Of Integer)
			Get
				Return Me._Idadelanto
			End Get
			Set
				If (Me._Idadelanto.Equals(value) = false) Then
					Me.OnIdadelantoChanging(value)
					Me.SendPropertyChanging
					Me._Idadelanto = value
					Me.SendPropertyChanged("Idadelanto")
					Me.OnIdadelantoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="idcompras", Storage:="_Idcompras", DbType:="Int")>  _
		Public Property Idcompras() As System.Nullable(Of Integer)
			Get
				Return Me._Idcompras
			End Get
			Set
				If (Me._Idcompras.Equals(value) = false) Then
					Me.OnIdcomprasChanging(value)
					Me.SendPropertyChanging
					Me._Idcompras = value
					Me.SendPropertyChanged("Idcompras")
					Me.OnIdcomprasChanged
				End If
			End Set
		End Property
		
		<Column(Name:="id_adelantos", Storage:="_Id_adelantos", DbType:="Int")>  _
		Public Property Id_adelantos() As System.Nullable(Of Integer)
			Get
				Return Me._Id_adelantos
			End Get
			Set
				If (Me._Id_adelantos.Equals(value) = false) Then
					Me.OnId_adelantosChanging(value)
					Me.SendPropertyChanging
					Me._Id_adelantos = value
					Me.SendPropertyChanged("Id_adelantos")
					Me.OnId_adelantosChanged
				End If
			End Set
		End Property
		
		<Column(Name:="saldo_anterior", Storage:="_Saldo_anterior", DbType:="Int")>  _
		Public Property Saldo_anterior() As System.Nullable(Of Integer)
			Get
				Return Me._Saldo_anterior
			End Get
			Set
				If (Me._Saldo_anterior.Equals(value) = false) Then
					Me.OnSaldo_anteriorChanging(value)
					Me.SendPropertyChanging
					Me._Saldo_anterior = value
					Me.SendPropertyChanged("Saldo_anterior")
					Me.OnSaldo_anteriorChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.mcaja")>  _
	Partial Public Class Mcaja
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Idcaja As Decimal
		
		Private _Codcaja As String
		
		Private _Codagencia As String
		
		Private _Fecha As System.Nullable(Of Date)
		
		Private _Sinicial As System.Nullable(Of Decimal)
		
		Private _Entrada As System.Nullable(Of Decimal)
		
		Private _Salida As System.Nullable(Of Decimal)
		
		Private _Sfinal As System.Nullable(Of Decimal)
		
		Private _Estado As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdcajaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdcajaChanged()
    End Sub
    Partial Private Sub OnCodcajaChanging(value As String)
    End Sub
    Partial Private Sub OnCodcajaChanged()
    End Sub
    Partial Private Sub OnCodagenciaChanging(value As String)
    End Sub
    Partial Private Sub OnCodagenciaChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnSinicialChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSinicialChanged()
    End Sub
    Partial Private Sub OnEntradaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEntradaChanged()
    End Sub
    Partial Private Sub OnSalidaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSalidaChanged()
    End Sub
    Partial Private Sub OnSfinalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSfinalChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="idcaja", Storage:="_Idcaja", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Idcaja() As Decimal
			Get
				Return Me._Idcaja
			End Get
			Set
				If ((Me._Idcaja = value)  _
							= false) Then
					Me.OnIdcajaChanging(value)
					Me.SendPropertyChanging
					Me._Idcaja = value
					Me.SendPropertyChanged("Idcaja")
					Me.OnIdcajaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me.OnCodcajaChanging(value)
					Me.SendPropertyChanging
					Me._Codcaja = value
					Me.SendPropertyChanged("Codcaja")
					Me.OnCodcajaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codagencia", Storage:="_Codagencia", DbType:="VarChar(10)")>  _
		Public Property Codagencia() As String
			Get
				Return Me._Codagencia
			End Get
			Set
				If (String.Equals(Me._Codagencia, value) = false) Then
					Me.OnCodagenciaChanging(value)
					Me.SendPropertyChanging
					Me._Codagencia = value
					Me.SendPropertyChanged("Codagencia")
					Me.OnCodagenciaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date")>  _
		Public Property Fecha() As System.Nullable(Of Date)
			Get
				Return Me._Fecha
			End Get
			Set
				If (Me._Fecha.Equals(value) = false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="sinicial", Storage:="_Sinicial", DbType:="Decimal(18,2)")>  _
		Public Property Sinicial() As System.Nullable(Of Decimal)
			Get
				Return Me._Sinicial
			End Get
			Set
				If (Me._Sinicial.Equals(value) = false) Then
					Me.OnSinicialChanging(value)
					Me.SendPropertyChanging
					Me._Sinicial = value
					Me.SendPropertyChanged("Sinicial")
					Me.OnSinicialChanged
				End If
			End Set
		End Property
		
		<Column(Name:="entrada", Storage:="_Entrada", DbType:="Decimal(18,2)")>  _
		Public Property Entrada() As System.Nullable(Of Decimal)
			Get
				Return Me._Entrada
			End Get
			Set
				If (Me._Entrada.Equals(value) = false) Then
					Me.OnEntradaChanging(value)
					Me.SendPropertyChanging
					Me._Entrada = value
					Me.SendPropertyChanged("Entrada")
					Me.OnEntradaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="salida", Storage:="_Salida", DbType:="Decimal(18,2)")>  _
		Public Property Salida() As System.Nullable(Of Decimal)
			Get
				Return Me._Salida
			End Get
			Set
				If (Me._Salida.Equals(value) = false) Then
					Me.OnSalidaChanging(value)
					Me.SendPropertyChanging
					Me._Salida = value
					Me.SendPropertyChanged("Salida")
					Me.OnSalidaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="sfinal", Storage:="_Sfinal", DbType:="Decimal(18,2)")>  _
		Public Property Sfinal() As System.Nullable(Of Decimal)
			Get
				Return Me._Sfinal
			End Get
			Set
				If (Me._Sfinal.Equals(value) = false) Then
					Me.OnSfinalChanging(value)
					Me.SendPropertyChanging
					Me._Sfinal = value
					Me.SendPropertyChanged("Sfinal")
					Me.OnSfinalChanged
				End If
			End Set
		End Property
		
		<Column(Name:="estado", Storage:="_Estado", DbType:="Int")>  _
		Public Property Estado() As System.Nullable(Of Integer)
			Get
				Return Me._Estado
			End Get
			Set
				If (Me._Estado.Equals(value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.movcaja")>  _
	Partial Public Class Movcaja
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Idmov As Integer
		
		Private _Descripcion As String
		
		Private _Codrubro As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdmovChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdmovChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnCodrubroChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCodrubroChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="idmov", Storage:="_Idmov", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property Idmov() As Integer
			Get
				Return Me._Idmov
			End Get
			Set
				If ((Me._Idmov = value)  _
							= false) Then
					Me.OnIdmovChanging(value)
					Me.SendPropertyChanging
					Me._Idmov = value
					Me.SendPropertyChanged("Idmov")
					Me.OnIdmovChanged
				End If
			End Set
		End Property
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="VarChar(250) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codrubro", Storage:="_Codrubro", DbType:="Int")>  _
		Public Property Codrubro() As System.Nullable(Of Integer)
			Get
				Return Me._Codrubro
			End Get
			Set
				If (Me._Codrubro.Equals(value) = false) Then
					Me.OnCodrubroChanging(value)
					Me.SendPropertyChanging
					Me._Codrubro = value
					Me.SendPropertyChanged("Codrubro")
					Me.OnCodrubroChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.MovimientosCajaSelect")>  _
	Partial Public Class MovimientosCajaSelect
		
		Private _Estado As System.Nullable(Of Integer)
		
		Private _Codcaja As String
		
		Private _Hora As String
		
		Private _Fecha As System.Nullable(Of Date)
		
		Private _Concepto As String
		
		Private _Efectivo As System.Nullable(Of Decimal)
		
		Private _Cheque As System.Nullable(Of Decimal)
		
		Private _Transferencia As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="estado", Storage:="_Estado", DbType:="Int")>  _
		Public Property Estado() As System.Nullable(Of Integer)
			Get
				Return Me._Estado
			End Get
			Set
				If (Me._Estado.Equals(value) = false) Then
					Me._Estado = value
				End If
			End Set
		End Property
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me._Codcaja = value
				End If
			End Set
		End Property
		
		<Column(Name:="hora", Storage:="_Hora", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Hora() As String
			Get
				Return Me._Hora
			End Get
			Set
				If (String.Equals(Me._Hora, value) = false) Then
					Me._Hora = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date")>  _
		Public Property Fecha() As System.Nullable(Of Date)
			Get
				Return Me._Fecha
			End Get
			Set
				If (Me._Fecha.Equals(value) = false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
		
		<Column(Name:="concepto", Storage:="_Concepto", DbType:="VarChar(250)")>  _
		Public Property Concepto() As String
			Get
				Return Me._Concepto
			End Get
			Set
				If (String.Equals(Me._Concepto, value) = false) Then
					Me._Concepto = value
				End If
			End Set
		End Property
		
		<Column(Name:="efectivo", Storage:="_Efectivo", DbType:="Decimal(18,2)")>  _
		Public Property Efectivo() As System.Nullable(Of Decimal)
			Get
				Return Me._Efectivo
			End Get
			Set
				If (Me._Efectivo.Equals(value) = false) Then
					Me._Efectivo = value
				End If
			End Set
		End Property
		
		<Column(Name:="cheque", Storage:="_Cheque", DbType:="Decimal(18,2)")>  _
		Public Property Cheque() As System.Nullable(Of Decimal)
			Get
				Return Me._Cheque
			End Get
			Set
				If (Me._Cheque.Equals(value) = false) Then
					Me._Cheque = value
				End If
			End Set
		End Property
		
		<Column(Name:="transferencia", Storage:="_Transferencia", DbType:="Decimal(18,2)")>  _
		Public Property Transferencia() As System.Nullable(Of Decimal)
			Get
				Return Me._Transferencia
			End Get
			Set
				If (Me._Transferencia.Equals(value) = false) Then
					Me._Transferencia = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.pagos_adelantados")>  _
	Partial Public Class Pagos_adelantados
		
		Private _IdPagoefec As Integer
		
		Private _Idingreso As String
		
		Private _Codagencia As String
		
		Private _Fechaop_parcial As Date
		
		Private _Valor_parcialpagado As Decimal
		
		Private _Usuario As String
		
		Private _Hora_op As Date
		
		Private _Estado_op As String
		
		Private _Caja_regadel As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Storage:="_IdPagoefec", DbType:="Int NOT NULL")>  _
		Public Property IdPagoefec() As Integer
			Get
				Return Me._IdPagoefec
			End Get
			Set
				If ((Me._IdPagoefec = value)  _
							= false) Then
					Me._IdPagoefec = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Idingreso", DbType:="Char(14) NOT NULL", CanBeNull:=false)>  _
		Public Property Idingreso() As String
			Get
				Return Me._Idingreso
			End Get
			Set
				If (String.Equals(Me._Idingreso, value) = false) Then
					Me._Idingreso = value
				End If
			End Set
		End Property
		
		<Column(Name:="codagencia", Storage:="_Codagencia", DbType:="Char(4)")>  _
		Public Property Codagencia() As String
			Get
				Return Me._Codagencia
			End Get
			Set
				If (String.Equals(Me._Codagencia, value) = false) Then
					Me._Codagencia = value
				End If
			End Set
		End Property
		
		<Column(Name:="fechaop_parcial", Storage:="_Fechaop_parcial", DbType:="Date NOT NULL")>  _
		Public Property Fechaop_parcial() As Date
			Get
				Return Me._Fechaop_parcial
			End Get
			Set
				If ((Me._Fechaop_parcial = value)  _
							= false) Then
					Me._Fechaop_parcial = value
				End If
			End Set
		End Property
		
		<Column(Name:="valor_parcialpagado", Storage:="_Valor_parcialpagado", DbType:="Decimal(11,2) NOT NULL")>  _
		Public Property Valor_parcialpagado() As Decimal
			Get
				Return Me._Valor_parcialpagado
			End Get
			Set
				If ((Me._Valor_parcialpagado = value)  _
							= false) Then
					Me._Valor_parcialpagado = value
				End If
			End Set
		End Property
		
		<Column(Name:="usuario", Storage:="_Usuario", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me._Usuario = value
				End If
			End Set
		End Property
		
		<Column(Name:="hora_op", Storage:="_Hora_op", DbType:="Date NOT NULL")>  _
		Public Property Hora_op() As Date
			Get
				Return Me._Hora_op
			End Get
			Set
				If ((Me._Hora_op = value)  _
							= false) Then
					Me._Hora_op = value
				End If
			End Set
		End Property
		
		<Column(Name:="estado_op", Storage:="_Estado_op", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
		Public Property Estado_op() As String
			Get
				Return Me._Estado_op
			End Get
			Set
				If (String.Equals(Me._Estado_op, value) = false) Then
					Me._Estado_op = value
				End If
			End Set
		End Property
		
		<Column(Name:="caja_regadel", Storage:="_Caja_regadel", DbType:="VarChar(8)")>  _
		Public Property Caja_regadel() As String
			Get
				Return Me._Caja_regadel
			End Get
			Set
				If (String.Equals(Me._Caja_regadel, value) = false) Then
					Me._Caja_regadel = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.Pica")>  _
	Partial Public Class Pica
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codcliente As String
		
		Private _Nombre_entidad As String
		
		Private _Tipo_relacion As String
		
		Private _Tiempo_mantener As String
		
		Private _Ingreso_mensual As System.Nullable(Of Decimal)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodclienteChanging(value As String)
    End Sub
    Partial Private Sub OnCodclienteChanged()
    End Sub
    Partial Private Sub OnNombre_entidadChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_entidadChanged()
    End Sub
    Partial Private Sub OnTipo_relacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipo_relacionChanged()
    End Sub
    Partial Private Sub OnTiempo_mantenerChanging(value As String)
    End Sub
    Partial Private Sub OnTiempo_mantenerChanged()
    End Sub
    Partial Private Sub OnIngreso_mensualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIngreso_mensualChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me.OnCodclienteChanging(value)
					Me.SendPropertyChanging
					Me._Codcliente = value
					Me.SendPropertyChanged("Codcliente")
					Me.OnCodclienteChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nombre_entidad", Storage:="_Nombre_entidad", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Nombre_entidad() As String
			Get
				Return Me._Nombre_entidad
			End Get
			Set
				If (String.Equals(Me._Nombre_entidad, value) = false) Then
					Me.OnNombre_entidadChanging(value)
					Me.SendPropertyChanging
					Me._Nombre_entidad = value
					Me.SendPropertyChanged("Nombre_entidad")
					Me.OnNombre_entidadChanged
				End If
			End Set
		End Property
		
		<Column(Name:="tipo_relacion", Storage:="_Tipo_relacion", DbType:="VarChar(50)")>  _
		Public Property Tipo_relacion() As String
			Get
				Return Me._Tipo_relacion
			End Get
			Set
				If (String.Equals(Me._Tipo_relacion, value) = false) Then
					Me.OnTipo_relacionChanging(value)
					Me.SendPropertyChanging
					Me._Tipo_relacion = value
					Me.SendPropertyChanged("Tipo_relacion")
					Me.OnTipo_relacionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="tiempo_mantener", Storage:="_Tiempo_mantener", DbType:="VarChar(50)")>  _
		Public Property Tiempo_mantener() As String
			Get
				Return Me._Tiempo_mantener
			End Get
			Set
				If (String.Equals(Me._Tiempo_mantener, value) = false) Then
					Me.OnTiempo_mantenerChanging(value)
					Me.SendPropertyChanging
					Me._Tiempo_mantener = value
					Me.SendPropertyChanged("Tiempo_mantener")
					Me.OnTiempo_mantenerChanged
				End If
			End Set
		End Property
		
		<Column(Name:="ingreso_mensual", Storage:="_Ingreso_mensual", DbType:="Money")>  _
		Public Property Ingreso_mensual() As System.Nullable(Of Decimal)
			Get
				Return Me._Ingreso_mensual
			End Get
			Set
				If (Me._Ingreso_mensual.Equals(value) = false) Then
					Me.OnIngreso_mensualChanging(value)
					Me.SendPropertyChanging
					Me._Ingreso_mensual = value
					Me.SendPropertyChanged("Ingreso_mensual")
					Me.OnIngreso_mensualChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.PrecioKilate")>  _
	Partial Public Class PrecioKilate
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Desc_kilate As String
		
		Private _Kilate_peso As Decimal
		
		Private _Precio_kilate As Decimal
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDesc_kilateChanging(value As String)
    End Sub
    Partial Private Sub OnDesc_kilateChanged()
    End Sub
    Partial Private Sub OnKilate_pesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnKilate_pesoChanged()
    End Sub
    Partial Private Sub OnPrecio_kilateChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPrecio_kilateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="desc_kilate", Storage:="_Desc_kilate", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Desc_kilate() As String
			Get
				Return Me._Desc_kilate
			End Get
			Set
				If (String.Equals(Me._Desc_kilate, value) = false) Then
					Me.OnDesc_kilateChanging(value)
					Me.SendPropertyChanging
					Me._Desc_kilate = value
					Me.SendPropertyChanged("Desc_kilate")
					Me.OnDesc_kilateChanged
				End If
			End Set
		End Property
		
		<Column(Name:="kilate_peso", Storage:="_Kilate_peso", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Kilate_peso() As Decimal
			Get
				Return Me._Kilate_peso
			End Get
			Set
				If ((Me._Kilate_peso = value)  _
							= false) Then
					Me.OnKilate_pesoChanging(value)
					Me.SendPropertyChanging
					Me._Kilate_peso = value
					Me.SendPropertyChanged("Kilate_peso")
					Me.OnKilate_pesoChanged
				End If
			End Set
		End Property
		
		<Column(Name:="precio_kilate", Storage:="_Precio_kilate", DbType:="Decimal(18,2) NOT NULL")>  _
		Public Property Precio_kilate() As Decimal
			Get
				Return Me._Precio_kilate
			End Get
			Set
				If ((Me._Precio_kilate = value)  _
							= false) Then
					Me.OnPrecio_kilateChanging(value)
					Me.SendPropertyChanging
					Me._Precio_kilate = value
					Me.SendPropertyChanged("Precio_kilate")
					Me.OnPrecio_kilateChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.Precios")>  _
	Partial Public Class Precios
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Descripcion As String
		
		Private _Kilate As Decimal
		
		Private _Precio As Decimal
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnKilateChanging(value As Decimal)
    End Sub
    Partial Private Sub OnKilateChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="kilate", Storage:="_Kilate", DbType:="Decimal(12,3) NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Kilate() As Decimal
			Get
				Return Me._Kilate
			End Get
			Set
				If ((Me._Kilate = value)  _
							= false) Then
					Me.OnKilateChanging(value)
					Me.SendPropertyChanging
					Me._Kilate = value
					Me.SendPropertyChanged("Kilate")
					Me.OnKilateChanged
				End If
			End Set
		End Property
		
		<Column(Name:="precio", Storage:="_Precio", DbType:="Decimal(12,3) NOT NULL")>  _
		Public Property Precio() As Decimal
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.ReporteCaja")>  _
	Partial Public Class ReporteCaja
		
		Private _Codagencia As String
		
		Private _Codrubro As String
		
		Private _Codoperador As String
		
		Private _Monto As Decimal
		
		Private _Fecha As Date
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="codagencia", Storage:="_Codagencia", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codagencia() As String
			Get
				Return Me._Codagencia
			End Get
			Set
				If (String.Equals(Me._Codagencia, value) = false) Then
					Me._Codagencia = value
				End If
			End Set
		End Property
		
		<Column(Name:="codrubro", Storage:="_Codrubro", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codrubro() As String
			Get
				Return Me._Codrubro
			End Get
			Set
				If (String.Equals(Me._Codrubro, value) = false) Then
					Me._Codrubro = value
				End If
			End Set
		End Property
		
		<Column(Name:="codoperador", Storage:="_Codoperador", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codoperador() As String
			Get
				Return Me._Codoperador
			End Get
			Set
				If (String.Equals(Me._Codoperador, value) = false) Then
					Me._Codoperador = value
				End If
			End Set
		End Property
		
		<Column(Name:="monto", Storage:="_Monto", DbType:="Money NOT NULL")>  _
		Public Property Monto() As Decimal
			Get
				Return Me._Monto
			End Get
			Set
				If ((Me._Monto = value)  _
							= false) Then
					Me._Monto = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.rptMovimientosCaja")>  _
	Partial Public Class RptMovimientosCaja
		
		Private _Descrubro As String
		
		Private _Descripcion As String
		
		Private _Efectivo As System.Nullable(Of Decimal)
		
		Private _Cheque As System.Nullable(Of Decimal)
		
		Private _Transferencia As System.Nullable(Of Decimal)
		
		Private _Fecha As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="descrubro", Storage:="_Descrubro", DbType:="VarChar(250) NOT NULL", CanBeNull:=false)>  _
		Public Property Descrubro() As String
			Get
				Return Me._Descrubro
			End Get
			Set
				If (String.Equals(Me._Descrubro, value) = false) Then
					Me._Descrubro = value
				End If
			End Set
		End Property
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="VarChar(250) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me._Descripcion = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Efectivo", DbType:="Decimal(38,2)")>  _
		Public Property Efectivo() As System.Nullable(Of Decimal)
			Get
				Return Me._Efectivo
			End Get
			Set
				If (Me._Efectivo.Equals(value) = false) Then
					Me._Efectivo = value
				End If
			End Set
		End Property
		
		<Column(Name:="cheque", Storage:="_Cheque", DbType:="Decimal(38,2)")>  _
		Public Property Cheque() As System.Nullable(Of Decimal)
			Get
				Return Me._Cheque
			End Get
			Set
				If (Me._Cheque.Equals(value) = false) Then
					Me._Cheque = value
				End If
			End Set
		End Property
		
		<Column(Name:="transferencia", Storage:="_Transferencia", DbType:="Decimal(38,2)")>  _
		Public Property Transferencia() As System.Nullable(Of Decimal)
			Get
				Return Me._Transferencia
			End Get
			Set
				If (Me._Transferencia.Equals(value) = false) Then
					Me._Transferencia = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date")>  _
		Public Property Fecha() As System.Nullable(Of Date)
			Get
				Return Me._Fecha
			End Get
			Set
				If (Me._Fecha.Equals(value) = false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.Rubro")>  _
	Partial Public Class Rubro
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Descrubro As String
		
		Private _Naturaleza As System.Nullable(Of Integer)
		
		Private _Codrubro As Integer
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDescrubroChanging(value As String)
    End Sub
    Partial Private Sub OnDescrubroChanged()
    End Sub
    Partial Private Sub OnNaturalezaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNaturalezaChanged()
    End Sub
    Partial Private Sub OnCodrubroChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodrubroChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="descrubro", Storage:="_Descrubro", DbType:="VarChar(250) NOT NULL", CanBeNull:=false)>  _
		Public Property Descrubro() As String
			Get
				Return Me._Descrubro
			End Get
			Set
				If (String.Equals(Me._Descrubro, value) = false) Then
					Me.OnDescrubroChanging(value)
					Me.SendPropertyChanging
					Me._Descrubro = value
					Me.SendPropertyChanged("Descrubro")
					Me.OnDescrubroChanged
				End If
			End Set
		End Property
		
		<Column(Name:="naturaleza", Storage:="_Naturaleza", DbType:="Int")>  _
		Public Property Naturaleza() As System.Nullable(Of Integer)
			Get
				Return Me._Naturaleza
			End Get
			Set
				If (Me._Naturaleza.Equals(value) = false) Then
					Me.OnNaturalezaChanging(value)
					Me.SendPropertyChanging
					Me._Naturaleza = value
					Me.SendPropertyChanged("Naturaleza")
					Me.OnNaturalezaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="codrubro", Storage:="_Codrubro", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property Codrubro() As Integer
			Get
				Return Me._Codrubro
			End Get
			Set
				If ((Me._Codrubro = value)  _
							= false) Then
					Me.OnCodrubroChanging(value)
					Me.SendPropertyChanging
					Me._Codrubro = value
					Me.SendPropertyChanged("Codrubro")
					Me.OnCodrubroChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.rubros_caja")>  _
	Partial Public Class Rubros_caja
		
		Private _Rucodrub As String
		
		Private _Rucodope As String
		
		Private _Rudescri As String
		
		Private _Rudeha As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="rucodrub", Storage:="_Rucodrub", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
		Public Property Rucodrub() As String
			Get
				Return Me._Rucodrub
			End Get
			Set
				If (String.Equals(Me._Rucodrub, value) = false) Then
					Me._Rucodrub = value
				End If
			End Set
		End Property
		
		<Column(Name:="rucodope", Storage:="_Rucodope", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
		Public Property Rucodope() As String
			Get
				Return Me._Rucodope
			End Get
			Set
				If (String.Equals(Me._Rucodope, value) = false) Then
					Me._Rucodope = value
				End If
			End Set
		End Property
		
		<Column(Name:="rudescri", Storage:="_Rudescri", DbType:="Char(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Rudescri() As String
			Get
				Return Me._Rudescri
			End Get
			Set
				If (String.Equals(Me._Rudescri, value) = false) Then
					Me._Rudescri = value
				End If
			End Set
		End Property
		
		<Column(Name:="rudeha", Storage:="_Rudeha", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Rudeha() As String
			Get
				Return Me._Rudeha
			End Get
			Set
				If (String.Equals(Me._Rudeha, value) = false) Then
					Me._Rudeha = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.TipoCambio")>  _
	Partial Public Class TipoCambio
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Fecha As Date
		
		Private _Tipocambio1 As Decimal
		
		Private _Hora As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnTipocambio1Changing(value As Decimal)
    End Sub
    Partial Private Sub OnTipocambio1Changed()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="tipocambio", Storage:="_Tipocambio1", DbType:="Decimal(12,4) NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Tipocambio1() As Decimal
			Get
				Return Me._Tipocambio1
			End Get
			Set
				If ((Me._Tipocambio1 = value)  _
							= false) Then
					Me.OnTipocambio1Changing(value)
					Me.SendPropertyChanging
					Me._Tipocambio1 = value
					Me.SendPropertyChanged("Tipocambio1")
					Me.OnTipocambio1Changed
				End If
			End Set
		End Property
		
		<Column(Name:="hora", Storage:="_Hora", DbType:="NVarChar(50)")>  _
		Public Property Hora() As String
			Get
				Return Me._Hora
			End Get
			Set
				If (String.Equals(Me._Hora, value) = false) Then
					Me.OnHoraChanging(value)
					Me.SendPropertyChanging
					Me._Hora = value
					Me.SendPropertyChanged("Hora")
					Me.OnHoraChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.TipoPreciosPagados")>  _
	Partial Public Class TipoPreciosPagados
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codprecio As String
		
		Private _Descripcion As String
		
		Private _Pesoinicial As String
		
		Private _Pesofinal As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodprecioChanging(value As String)
    End Sub
    Partial Private Sub OnCodprecioChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnPesoinicialChanging(value As String)
    End Sub
    Partial Private Sub OnPesoinicialChanged()
    End Sub
    Partial Private Sub OnPesofinalChanging(value As String)
    End Sub
    Partial Private Sub OnPesofinalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codprecio", Storage:="_Codprecio", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codprecio() As String
			Get
				Return Me._Codprecio
			End Get
			Set
				If (String.Equals(Me._Codprecio, value) = false) Then
					Me.OnCodprecioChanging(value)
					Me.SendPropertyChanging
					Me._Codprecio = value
					Me.SendPropertyChanged("Codprecio")
					Me.OnCodprecioChanged
				End If
			End Set
		End Property
		
		<Column(Name:="descripcion", Storage:="_Descripcion", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Column(Name:="pesoinicial", Storage:="_Pesoinicial", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Pesoinicial() As String
			Get
				Return Me._Pesoinicial
			End Get
			Set
				If (String.Equals(Me._Pesoinicial, value) = false) Then
					Me.OnPesoinicialChanging(value)
					Me.SendPropertyChanging
					Me._Pesoinicial = value
					Me.SendPropertyChanged("Pesoinicial")
					Me.OnPesoinicialChanged
				End If
			End Set
		End Property
		
		<Column(Name:="pesofinal", Storage:="_Pesofinal", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Pesofinal() As String
			Get
				Return Me._Pesofinal
			End Get
			Set
				If (String.Equals(Me._Pesofinal, value) = false) Then
					Me.OnPesofinalChanging(value)
					Me.SendPropertyChanging
					Me._Pesofinal = value
					Me.SendPropertyChanged("Pesofinal")
					Me.OnPesofinalChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.TransaccionEfectivo")>  _
	Partial Public Class TransaccionEfectivo
		
		Private _Numcompra As String
		
		Private _Codcliente As String
		
		Private _Nombres As String
		
		Private _Apellidos As String
		
		Private _Fecha As Date
		
		Private _FormaPago As String
		
		Private _Total As Decimal
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="numcompra", Storage:="_Numcompra", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Numcompra() As String
			Get
				Return Me._Numcompra
			End Get
			Set
				If (String.Equals(Me._Numcompra, value) = false) Then
					Me._Numcompra = value
				End If
			End Set
		End Property
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me._Codcliente = value
				End If
			End Set
		End Property
		
		<Column(Name:="nombres", Storage:="_Nombres", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombres() As String
			Get
				Return Me._Nombres
			End Get
			Set
				If (String.Equals(Me._Nombres, value) = false) Then
					Me._Nombres = value
				End If
			End Set
		End Property
		
		<Column(Name:="apellidos", Storage:="_Apellidos", DbType:="VarChar(50)")>  _
		Public Property Apellidos() As String
			Get
				Return Me._Apellidos
			End Get
			Set
				If (String.Equals(Me._Apellidos, value) = false) Then
					Me._Apellidos = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_FormaPago", DbType:="VarChar(13) NOT NULL", CanBeNull:=false)>  _
		Public Property FormaPago() As String
			Get
				Return Me._FormaPago
			End Get
			Set
				If (String.Equals(Me._FormaPago, value) = false) Then
					Me._FormaPago = value
				End If
			End Set
		End Property
		
		<Column(Name:="total", Storage:="_Total", DbType:="Decimal(15,2) NOT NULL")>  _
		Public Property Total() As Decimal
			Get
				Return Me._Total
			End Get
			Set
				If ((Me._Total = value)  _
							= false) Then
					Me._Total = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.usuario")>  _
	Partial Public Class Usuario
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codoperador As String
		
		Private _Usuario1 As String
		
		Private _Clave As String
		
		Private _Nombre As String
		
		Private _Pregunta As String
		
		Private _Respuesta As String
		
		Private _Fcreau As Date
		
		Private _Nivel As Integer
		
		Private _Estado As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodoperadorChanging(value As String)
    End Sub
    Partial Private Sub OnCodoperadorChanged()
    End Sub
    Partial Private Sub OnUsuario1Changing(value As String)
    End Sub
    Partial Private Sub OnUsuario1Changed()
    End Sub
    Partial Private Sub OnClaveChanging(value As String)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnPreguntaChanging(value As String)
    End Sub
    Partial Private Sub OnPreguntaChanged()
    End Sub
    Partial Private Sub OnRespuestaChanging(value As String)
    End Sub
    Partial Private Sub OnRespuestaChanged()
    End Sub
    Partial Private Sub OnFcreauChanging(value As Date)
    End Sub
    Partial Private Sub OnFcreauChanged()
    End Sub
    Partial Private Sub OnNivelChanging(value As Integer)
    End Sub
    Partial Private Sub OnNivelChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Column(Name:="codoperador", Storage:="_Codoperador", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codoperador() As String
			Get
				Return Me._Codoperador
			End Get
			Set
				If (String.Equals(Me._Codoperador, value) = false) Then
					Me.OnCodoperadorChanging(value)
					Me.SendPropertyChanging
					Me._Codoperador = value
					Me.SendPropertyChanged("Codoperador")
					Me.OnCodoperadorChanged
				End If
			End Set
		End Property
		
		<Column(Name:="usuario", Storage:="_Usuario1", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario1() As String
			Get
				Return Me._Usuario1
			End Get
			Set
				If (String.Equals(Me._Usuario1, value) = false) Then
					Me.OnUsuario1Changing(value)
					Me.SendPropertyChanging
					Me._Usuario1 = value
					Me.SendPropertyChanged("Usuario1")
					Me.OnUsuario1Changed
				End If
			End Set
		End Property
		
		<Column(Name:="clave", Storage:="_Clave", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Clave() As String
			Get
				Return Me._Clave
			End Get
			Set
				If (String.Equals(Me._Clave, value) = false) Then
					Me.OnClaveChanging(value)
					Me.SendPropertyChanging
					Me._Clave = value
					Me.SendPropertyChanged("Clave")
					Me.OnClaveChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nombre", Storage:="_Nombre", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Column(Name:="pregunta", Storage:="_Pregunta", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Pregunta() As String
			Get
				Return Me._Pregunta
			End Get
			Set
				If (String.Equals(Me._Pregunta, value) = false) Then
					Me.OnPreguntaChanging(value)
					Me.SendPropertyChanging
					Me._Pregunta = value
					Me.SendPropertyChanged("Pregunta")
					Me.OnPreguntaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="respuesta", Storage:="_Respuesta", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Respuesta() As String
			Get
				Return Me._Respuesta
			End Get
			Set
				If (String.Equals(Me._Respuesta, value) = false) Then
					Me.OnRespuestaChanging(value)
					Me.SendPropertyChanging
					Me._Respuesta = value
					Me.SendPropertyChanged("Respuesta")
					Me.OnRespuestaChanged
				End If
			End Set
		End Property
		
		<Column(Name:="fcreau", Storage:="_Fcreau", DbType:="Date NOT NULL")>  _
		Public Property Fcreau() As Date
			Get
				Return Me._Fcreau
			End Get
			Set
				If ((Me._Fcreau = value)  _
							= false) Then
					Me.OnFcreauChanging(value)
					Me.SendPropertyChanging
					Me._Fcreau = value
					Me.SendPropertyChanged("Fcreau")
					Me.OnFcreauChanged
				End If
			End Set
		End Property
		
		<Column(Name:="nivel", Storage:="_Nivel", DbType:="Int NOT NULL")>  _
		Public Property Nivel() As Integer
			Get
				Return Me._Nivel
			End Get
			Set
				If ((Me._Nivel = value)  _
							= false) Then
					Me.OnNivelChanging(value)
					Me.SendPropertyChanging
					Me._Nivel = value
					Me.SendPropertyChanged("Nivel")
					Me.OnNivelChanged
				End If
			End Set
		End Property
		
		<Column(Name:="estado", Storage:="_Estado", DbType:="VarChar(50)")>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Table(Name:="dbo.vdetacaja")>  _
	Partial Public Class Vdetacaja
		
		Private _Idcaja As Decimal
		
		Private _Idmov As Integer
		
		Private _Hora As String
		
		Private _Fecha As System.Nullable(Of Date)
		
		Private _Concepto As String
		
		Private _Efectivo As System.Nullable(Of Decimal)
		
		Private _Cheque As System.Nullable(Of Decimal)
		
		Private _Transferencia As System.Nullable(Of Decimal)
		
		Private _Codcaja As String
		
		Private _Referencia As String
		
		Private _Sinicial As System.Nullable(Of Decimal)
		
		Private _Sfinal As System.Nullable(Of Decimal)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="idcaja", Storage:="_Idcaja", DbType:="Decimal(18,0) NOT NULL")>  _
		Public Property Idcaja() As Decimal
			Get
				Return Me._Idcaja
			End Get
			Set
				If ((Me._Idcaja = value)  _
							= false) Then
					Me._Idcaja = value
				End If
			End Set
		End Property
		
		<Column(Name:="idmov", Storage:="_Idmov", DbType:="Int NOT NULL")>  _
		Public Property Idmov() As Integer
			Get
				Return Me._Idmov
			End Get
			Set
				If ((Me._Idmov = value)  _
							= false) Then
					Me._Idmov = value
				End If
			End Set
		End Property
		
		<Column(Name:="hora", Storage:="_Hora", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Hora() As String
			Get
				Return Me._Hora
			End Get
			Set
				If (String.Equals(Me._Hora, value) = false) Then
					Me._Hora = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date")>  _
		Public Property Fecha() As System.Nullable(Of Date)
			Get
				Return Me._Fecha
			End Get
			Set
				If (Me._Fecha.Equals(value) = false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
		
		<Column(Name:="concepto", Storage:="_Concepto", DbType:="VarChar(250)")>  _
		Public Property Concepto() As String
			Get
				Return Me._Concepto
			End Get
			Set
				If (String.Equals(Me._Concepto, value) = false) Then
					Me._Concepto = value
				End If
			End Set
		End Property
		
		<Column(Name:="efectivo", Storage:="_Efectivo", DbType:="Decimal(20,2)")>  _
		Public Property Efectivo() As System.Nullable(Of Decimal)
			Get
				Return Me._Efectivo
			End Get
			Set
				If (Me._Efectivo.Equals(value) = false) Then
					Me._Efectivo = value
				End If
			End Set
		End Property
		
		<Column(Name:="cheque", Storage:="_Cheque", DbType:="Decimal(20,2)")>  _
		Public Property Cheque() As System.Nullable(Of Decimal)
			Get
				Return Me._Cheque
			End Get
			Set
				If (Me._Cheque.Equals(value) = false) Then
					Me._Cheque = value
				End If
			End Set
		End Property
		
		<Column(Name:="transferencia", Storage:="_Transferencia", DbType:="Decimal(20,2)")>  _
		Public Property Transferencia() As System.Nullable(Of Decimal)
			Get
				Return Me._Transferencia
			End Get
			Set
				If (Me._Transferencia.Equals(value) = false) Then
					Me._Transferencia = value
				End If
			End Set
		End Property
		
		<Column(Name:="codcaja", Storage:="_Codcaja", DbType:="VarChar(10)")>  _
		Public Property Codcaja() As String
			Get
				Return Me._Codcaja
			End Get
			Set
				If (String.Equals(Me._Codcaja, value) = false) Then
					Me._Codcaja = value
				End If
			End Set
		End Property
		
		<Column(Name:="referencia", Storage:="_Referencia", DbType:="VarChar(250)")>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me._Referencia = value
				End If
			End Set
		End Property
		
		<Column(Name:="sinicial", Storage:="_Sinicial", DbType:="Decimal(18,2)")>  _
		Public Property Sinicial() As System.Nullable(Of Decimal)
			Get
				Return Me._Sinicial
			End Get
			Set
				If (Me._Sinicial.Equals(value) = false) Then
					Me._Sinicial = value
				End If
			End Set
		End Property
		
		<Column(Name:="sfinal", Storage:="_Sfinal", DbType:="Decimal(18,2)")>  _
		Public Property Sfinal() As System.Nullable(Of Decimal)
			Get
				Return Me._Sfinal
			End Get
			Set
				If (Me._Sfinal.Equals(value) = false) Then
					Me._Sfinal = value
				End If
			End Set
		End Property
	End Class
	
	<Table(Name:="dbo.vVariacionesCliente")>  _
	Partial Public Class VVariacionesCliente
		
		Private _Codcliente As String
		
		Private _Nombres As String
		
		Private _Apellidos As String
		
		Private _Mes As String
		
		Private _Monto As System.Nullable(Of Decimal)
		
		Private _MontoMensual As System.Nullable(Of Decimal)
		
		Private _Variacion As System.Nullable(Of Decimal)
		
		Private _Fecha As Date
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Name:="codcliente", Storage:="_Codcliente", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Codcliente() As String
			Get
				Return Me._Codcliente
			End Get
			Set
				If (String.Equals(Me._Codcliente, value) = false) Then
					Me._Codcliente = value
				End If
			End Set
		End Property
		
		<Column(Name:="nombres", Storage:="_Nombres", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombres() As String
			Get
				Return Me._Nombres
			End Get
			Set
				If (String.Equals(Me._Nombres, value) = false) Then
					Me._Nombres = value
				End If
			End Set
		End Property
		
		<Column(Name:="apellidos", Storage:="_Apellidos", DbType:="VarChar(50)")>  _
		Public Property Apellidos() As String
			Get
				Return Me._Apellidos
			End Get
			Set
				If (String.Equals(Me._Apellidos, value) = false) Then
					Me._Apellidos = value
				End If
			End Set
		End Property
		
		<Column(Name:="mes", Storage:="_Mes", DbType:="NVarChar(30)")>  _
		Public Property Mes() As String
			Get
				Return Me._Mes
			End Get
			Set
				If (String.Equals(Me._Mes, value) = false) Then
					Me._Mes = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Monto", DbType:="Decimal(32,8)")>  _
		Public Property Monto() As System.Nullable(Of Decimal)
			Get
				Return Me._Monto
			End Get
			Set
				If (Me._Monto.Equals(value) = false) Then
					Me._Monto = value
				End If
			End Set
		End Property
		
		<Column(Name:="Monto Mensual", Storage:="_MontoMensual", DbType:="Decimal(38,2)")>  _
		Public Property MontoMensual() As System.Nullable(Of Decimal)
			Get
				Return Me._MontoMensual
			End Get
			Set
				If (Me._MontoMensual.Equals(value) = false) Then
					Me._MontoMensual = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Variacion", DbType:="Decimal(38,6)")>  _
		Public Property Variacion() As System.Nullable(Of Decimal)
			Get
				Return Me._Variacion
			End Get
			Set
				If (Me._Variacion.Equals(value) = false) Then
					Me._Variacion = value
				End If
			End Set
		End Property
		
		<Column(Name:="fecha", Storage:="_Fecha", DbType:="Date NOT NULL")>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me._Fecha = value
				End If
			End Set
		End Property
	End Class
End Namespace
